// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: studioapi.proto

package com.cdptech.cdpclient.proto;

public final class StudioAPI {
  private StudioAPI() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code StudioAPI.Proto.RemoteErrorCode}
   */
  public enum RemoteErrorCode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>eINVALID_REQUEST = 10;</code>
     */
    eINVALID_REQUEST(0, 10),
    /**
     * <code>eUNSUPPORTED_CONTAINER_TYPE = 20;</code>
     */
    eUNSUPPORTED_CONTAINER_TYPE(1, 20),
    ;

    /**
     * <code>eINVALID_REQUEST = 10;</code>
     */
    public static final int eINVALID_REQUEST_VALUE = 10;
    /**
     * <code>eUNSUPPORTED_CONTAINER_TYPE = 20;</code>
     */
    public static final int eUNSUPPORTED_CONTAINER_TYPE_VALUE = 20;


    public final int getNumber() { return value; }

    public static RemoteErrorCode valueOf(int value) {
      switch (value) {
        case 10: return eINVALID_REQUEST;
        case 20: return eUNSUPPORTED_CONTAINER_TYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RemoteErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RemoteErrorCode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RemoteErrorCode>() {
            public RemoteErrorCode findValueByNumber(int number) {
              return RemoteErrorCode.valueOf(number);
            }
          };

    private final int value;

    private RemoteErrorCode(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:StudioAPI.Proto.RemoteErrorCode)
  }

  /**
   * Protobuf enum {@code StudioAPI.Proto.CDPNodeType}
   *
   * <pre>
   ** CDP Node base type identifier.
   * </pre>
   */
  public enum CDPNodeType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CDP_UNDEFINED = -1;</code>
     */
    CDP_UNDEFINED(0, -1),
    /**
     * <code>CDP_SYSTEM = 0;</code>
     */
    CDP_SYSTEM(1, 0),
    /**
     * <code>CDP_APPLICATION = 1;</code>
     */
    CDP_APPLICATION(2, 1),
    /**
     * <code>CDP_COMPONENT = 2;</code>
     */
    CDP_COMPONENT(3, 2),
    /**
     * <code>CDP_OBJECT = 3;</code>
     */
    CDP_OBJECT(4, 3),
    /**
     * <code>CDP_MESSAGE = 4;</code>
     */
    CDP_MESSAGE(5, 4),
    /**
     * <code>CDP_BASE_OBJECT = 5;</code>
     */
    CDP_BASE_OBJECT(6, 5),
    /**
     * <code>CDP_PROPERTY = 6;</code>
     */
    CDP_PROPERTY(7, 6),
    /**
     * <code>CDP_SETTING = 7;</code>
     */
    CDP_SETTING(8, 7),
    /**
     * <code>CDP_ENUM = 8;</code>
     */
    CDP_ENUM(9, 8),
    /**
     * <code>CDP_OPERATOR = 9;</code>
     */
    CDP_OPERATOR(10, 9),
    /**
     * <code>CDP_NODE = 10;</code>
     */
    CDP_NODE(11, 10),
    /**
     * <code>CDP_USER_TYPE = 100;</code>
     */
    CDP_USER_TYPE(12, 100),
    ;

    /**
     * <code>CDP_UNDEFINED = -1;</code>
     */
    public static final int CDP_UNDEFINED_VALUE = -1;
    /**
     * <code>CDP_SYSTEM = 0;</code>
     */
    public static final int CDP_SYSTEM_VALUE = 0;
    /**
     * <code>CDP_APPLICATION = 1;</code>
     */
    public static final int CDP_APPLICATION_VALUE = 1;
    /**
     * <code>CDP_COMPONENT = 2;</code>
     */
    public static final int CDP_COMPONENT_VALUE = 2;
    /**
     * <code>CDP_OBJECT = 3;</code>
     */
    public static final int CDP_OBJECT_VALUE = 3;
    /**
     * <code>CDP_MESSAGE = 4;</code>
     */
    public static final int CDP_MESSAGE_VALUE = 4;
    /**
     * <code>CDP_BASE_OBJECT = 5;</code>
     */
    public static final int CDP_BASE_OBJECT_VALUE = 5;
    /**
     * <code>CDP_PROPERTY = 6;</code>
     */
    public static final int CDP_PROPERTY_VALUE = 6;
    /**
     * <code>CDP_SETTING = 7;</code>
     */
    public static final int CDP_SETTING_VALUE = 7;
    /**
     * <code>CDP_ENUM = 8;</code>
     */
    public static final int CDP_ENUM_VALUE = 8;
    /**
     * <code>CDP_OPERATOR = 9;</code>
     */
    public static final int CDP_OPERATOR_VALUE = 9;
    /**
     * <code>CDP_NODE = 10;</code>
     */
    public static final int CDP_NODE_VALUE = 10;
    /**
     * <code>CDP_USER_TYPE = 100;</code>
     */
    public static final int CDP_USER_TYPE_VALUE = 100;


    public final int getNumber() { return value; }

    public static CDPNodeType valueOf(int value) {
      switch (value) {
        case -1: return CDP_UNDEFINED;
        case 0: return CDP_SYSTEM;
        case 1: return CDP_APPLICATION;
        case 2: return CDP_COMPONENT;
        case 3: return CDP_OBJECT;
        case 4: return CDP_MESSAGE;
        case 5: return CDP_BASE_OBJECT;
        case 6: return CDP_PROPERTY;
        case 7: return CDP_SETTING;
        case 8: return CDP_ENUM;
        case 9: return CDP_OPERATOR;
        case 10: return CDP_NODE;
        case 100: return CDP_USER_TYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CDPNodeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CDPNodeType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CDPNodeType>() {
            public CDPNodeType findValueByNumber(int number) {
              return CDPNodeType.valueOf(number);
            }
          };

    private final int value;

    private CDPNodeType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:StudioAPI.Proto.CDPNodeType)
  }

  /**
   * Protobuf enum {@code StudioAPI.Proto.CDPValueType}
   *
   * <pre>
   ** CDP Node value type identifier.
   * </pre>
   */
  public enum CDPValueType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>eUNDEFINED = 0;</code>
     */
    eUNDEFINED(0, 0),
    /**
     * <code>eDOUBLE = 1;</code>
     */
    eDOUBLE(1, 1),
    /**
     * <code>eUINT64 = 2;</code>
     */
    eUINT64(2, 2),
    /**
     * <code>eINT64 = 3;</code>
     */
    eINT64(3, 3),
    /**
     * <code>eFLOAT = 4;</code>
     */
    eFLOAT(4, 4),
    /**
     * <code>eUINT = 5;</code>
     */
    eUINT(5, 5),
    /**
     * <code>eINT = 6;</code>
     */
    eINT(6, 6),
    /**
     * <code>eUSHORT = 7;</code>
     */
    eUSHORT(7, 7),
    /**
     * <code>eSHORT = 8;</code>
     */
    eSHORT(8, 8),
    /**
     * <code>eUCHAR = 9;</code>
     */
    eUCHAR(9, 9),
    /**
     * <code>eCHAR = 10;</code>
     */
    eCHAR(10, 10),
    /**
     * <code>eBOOL = 11;</code>
     */
    eBOOL(11, 11),
    /**
     * <code>eSTRING = 12;</code>
     */
    eSTRING(12, 12),
    /**
     * <code>eUSERTYPE = 100;</code>
     */
    eUSERTYPE(13, 100),
    ;

    /**
     * <code>eUNDEFINED = 0;</code>
     */
    public static final int eUNDEFINED_VALUE = 0;
    /**
     * <code>eDOUBLE = 1;</code>
     */
    public static final int eDOUBLE_VALUE = 1;
    /**
     * <code>eUINT64 = 2;</code>
     */
    public static final int eUINT64_VALUE = 2;
    /**
     * <code>eINT64 = 3;</code>
     */
    public static final int eINT64_VALUE = 3;
    /**
     * <code>eFLOAT = 4;</code>
     */
    public static final int eFLOAT_VALUE = 4;
    /**
     * <code>eUINT = 5;</code>
     */
    public static final int eUINT_VALUE = 5;
    /**
     * <code>eINT = 6;</code>
     */
    public static final int eINT_VALUE = 6;
    /**
     * <code>eUSHORT = 7;</code>
     */
    public static final int eUSHORT_VALUE = 7;
    /**
     * <code>eSHORT = 8;</code>
     */
    public static final int eSHORT_VALUE = 8;
    /**
     * <code>eUCHAR = 9;</code>
     */
    public static final int eUCHAR_VALUE = 9;
    /**
     * <code>eCHAR = 10;</code>
     */
    public static final int eCHAR_VALUE = 10;
    /**
     * <code>eBOOL = 11;</code>
     */
    public static final int eBOOL_VALUE = 11;
    /**
     * <code>eSTRING = 12;</code>
     */
    public static final int eSTRING_VALUE = 12;
    /**
     * <code>eUSERTYPE = 100;</code>
     */
    public static final int eUSERTYPE_VALUE = 100;


    public final int getNumber() { return value; }

    public static CDPValueType valueOf(int value) {
      switch (value) {
        case 0: return eUNDEFINED;
        case 1: return eDOUBLE;
        case 2: return eUINT64;
        case 3: return eINT64;
        case 4: return eFLOAT;
        case 5: return eUINT;
        case 6: return eINT;
        case 7: return eUSHORT;
        case 8: return eSHORT;
        case 9: return eUCHAR;
        case 10: return eCHAR;
        case 11: return eBOOL;
        case 12: return eSTRING;
        case 100: return eUSERTYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CDPValueType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CDPValueType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CDPValueType>() {
            public CDPValueType findValueByNumber(int number) {
              return CDPValueType.valueOf(number);
            }
          };

    private final int value;

    private CDPValueType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:StudioAPI.Proto.CDPValueType)
  }

  public interface HelloOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string system_name = 1;
    /**
     * <code>required string system_name = 1;</code>
     */
    boolean hasSystemName();
    /**
     * <code>required string system_name = 1;</code>
     */
    java.lang.String getSystemName();
    /**
     * <code>required string system_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getSystemNameBytes();

    // required uint32 compat_version = 2 [default = 1];
    /**
     * <code>required uint32 compat_version = 2 [default = 1];</code>
     */
    boolean hasCompatVersion();
    /**
     * <code>required uint32 compat_version = 2 [default = 1];</code>
     */
    int getCompatVersion();

    // required uint32 incremental_version = 3 [default = 0];
    /**
     * <code>required uint32 incremental_version = 3 [default = 0];</code>
     */
    boolean hasIncrementalVersion();
    /**
     * <code>required uint32 incremental_version = 3 [default = 0];</code>
     */
    int getIncrementalVersion();

    // repeated bytes public_key = 4;
    /**
     * <code>repeated bytes public_key = 4;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getPublicKeyList();
    /**
     * <code>repeated bytes public_key = 4;</code>
     */
    int getPublicKeyCount();
    /**
     * <code>repeated bytes public_key = 4;</code>
     */
    com.google.protobuf.ByteString getPublicKey(int index);

    // optional bytes challenge = 5;
    /**
     * <code>optional bytes challenge = 5;</code>
     */
    boolean hasChallenge();
    /**
     * <code>optional bytes challenge = 5;</code>
     */
    com.google.protobuf.ByteString getChallenge();
  }
  /**
   * Protobuf type {@code StudioAPI.Proto.Hello}
   *
   * <pre>
   ** Initial server connection response.
   * </pre>
   */
  public static final class Hello extends
      com.google.protobuf.GeneratedMessageLite
      implements HelloOrBuilder {
    // Use Hello.newBuilder() to construct.
    private Hello(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Hello(boolean noInit) {}

    private static final Hello defaultInstance;
    public static Hello getDefaultInstance() {
      return defaultInstance;
    }

    public Hello getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Hello(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              systemName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              compatVersion_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              incrementalVersion_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                publicKey_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000008;
              }
              publicKey_.add(input.readBytes());
              break;
            }
            case 42: {
              bitField0_ |= 0x00000008;
              challenge_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          publicKey_ = java.util.Collections.unmodifiableList(publicKey_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Hello> PARSER =
        new com.google.protobuf.AbstractParser<Hello>() {
      public Hello parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Hello(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Hello> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string system_name = 1;
    public static final int SYSTEM_NAME_FIELD_NUMBER = 1;
    private java.lang.Object systemName_;
    /**
     * <code>required string system_name = 1;</code>
     */
    public boolean hasSystemName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string system_name = 1;</code>
     */
    public java.lang.String getSystemName() {
      java.lang.Object ref = systemName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          systemName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string system_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSystemNameBytes() {
      java.lang.Object ref = systemName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        systemName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 compat_version = 2 [default = 1];
    public static final int COMPAT_VERSION_FIELD_NUMBER = 2;
    private int compatVersion_;
    /**
     * <code>required uint32 compat_version = 2 [default = 1];</code>
     */
    public boolean hasCompatVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 compat_version = 2 [default = 1];</code>
     */
    public int getCompatVersion() {
      return compatVersion_;
    }

    // required uint32 incremental_version = 3 [default = 0];
    public static final int INCREMENTAL_VERSION_FIELD_NUMBER = 3;
    private int incrementalVersion_;
    /**
     * <code>required uint32 incremental_version = 3 [default = 0];</code>
     */
    public boolean hasIncrementalVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 incremental_version = 3 [default = 0];</code>
     */
    public int getIncrementalVersion() {
      return incrementalVersion_;
    }

    // repeated bytes public_key = 4;
    public static final int PUBLIC_KEY_FIELD_NUMBER = 4;
    private java.util.List<com.google.protobuf.ByteString> publicKey_;
    /**
     * <code>repeated bytes public_key = 4;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getPublicKeyList() {
      return publicKey_;
    }
    /**
     * <code>repeated bytes public_key = 4;</code>
     */
    public int getPublicKeyCount() {
      return publicKey_.size();
    }
    /**
     * <code>repeated bytes public_key = 4;</code>
     */
    public com.google.protobuf.ByteString getPublicKey(int index) {
      return publicKey_.get(index);
    }

    // optional bytes challenge = 5;
    public static final int CHALLENGE_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString challenge_;
    /**
     * <code>optional bytes challenge = 5;</code>
     */
    public boolean hasChallenge() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes challenge = 5;</code>
     */
    public com.google.protobuf.ByteString getChallenge() {
      return challenge_;
    }

    private void initFields() {
      systemName_ = "";
      compatVersion_ = 1;
      incrementalVersion_ = 0;
      publicKey_ = java.util.Collections.emptyList();
      challenge_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSystemName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCompatVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIncrementalVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSystemNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, compatVersion_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, incrementalVersion_);
      }
      for (int i = 0; i < publicKey_.size(); i++) {
        output.writeBytes(4, publicKey_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, challenge_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSystemNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, compatVersion_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, incrementalVersion_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < publicKey_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(publicKey_.get(i));
        }
        size += dataSize;
        size += 1 * getPublicKeyList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, challenge_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StudioAPI.Hello parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.Hello parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.Hello parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.Hello parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.Hello parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.Hello parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StudioAPI.Hello parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StudioAPI.Hello parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StudioAPI.Hello parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.Hello parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StudioAPI.Hello prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code StudioAPI.Proto.Hello}
     *
     * <pre>
     ** Initial server connection response.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          StudioAPI.Hello, Builder>
        implements StudioAPI.HelloOrBuilder {
      // Construct using StudioAPI.Hello.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        systemName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        compatVersion_ = 1;
        bitField0_ = (bitField0_ & ~0x00000002);
        incrementalVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        publicKey_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        challenge_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public StudioAPI.Hello getDefaultInstanceForType() {
        return StudioAPI.Hello.getDefaultInstance();
      }

      public StudioAPI.Hello build() {
        StudioAPI.Hello result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StudioAPI.Hello buildPartial() {
        StudioAPI.Hello result = new StudioAPI.Hello(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.systemName_ = systemName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.compatVersion_ = compatVersion_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.incrementalVersion_ = incrementalVersion_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          publicKey_ = java.util.Collections.unmodifiableList(publicKey_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.publicKey_ = publicKey_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.challenge_ = challenge_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(StudioAPI.Hello other) {
        if (other == StudioAPI.Hello.getDefaultInstance()) return this;
        if (other.hasSystemName()) {
          bitField0_ |= 0x00000001;
          systemName_ = other.systemName_;

        }
        if (other.hasCompatVersion()) {
          setCompatVersion(other.getCompatVersion());
        }
        if (other.hasIncrementalVersion()) {
          setIncrementalVersion(other.getIncrementalVersion());
        }
        if (!other.publicKey_.isEmpty()) {
          if (publicKey_.isEmpty()) {
            publicKey_ = other.publicKey_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePublicKeyIsMutable();
            publicKey_.addAll(other.publicKey_);
          }

        }
        if (other.hasChallenge()) {
          setChallenge(other.getChallenge());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSystemName()) {

          return false;
        }
        if (!hasCompatVersion()) {

          return false;
        }
        if (!hasIncrementalVersion()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StudioAPI.Hello parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StudioAPI.Hello) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string system_name = 1;
      private java.lang.Object systemName_ = "";
      /**
       * <code>required string system_name = 1;</code>
       */
      public boolean hasSystemName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string system_name = 1;</code>
       */
      public java.lang.String getSystemName() {
        java.lang.Object ref = systemName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          systemName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string system_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSystemNameBytes() {
        java.lang.Object ref = systemName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          systemName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string system_name = 1;</code>
       */
      public Builder setSystemName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        systemName_ = value;

        return this;
      }
      /**
       * <code>required string system_name = 1;</code>
       */
      public Builder clearSystemName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        systemName_ = getDefaultInstance().getSystemName();

        return this;
      }
      /**
       * <code>required string system_name = 1;</code>
       */
      public Builder setSystemNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        systemName_ = value;

        return this;
      }

      // required uint32 compat_version = 2 [default = 1];
      private int compatVersion_ = 1;
      /**
       * <code>required uint32 compat_version = 2 [default = 1];</code>
       */
      public boolean hasCompatVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 compat_version = 2 [default = 1];</code>
       */
      public int getCompatVersion() {
        return compatVersion_;
      }
      /**
       * <code>required uint32 compat_version = 2 [default = 1];</code>
       */
      public Builder setCompatVersion(int value) {
        bitField0_ |= 0x00000002;
        compatVersion_ = value;

        return this;
      }
      /**
       * <code>required uint32 compat_version = 2 [default = 1];</code>
       */
      public Builder clearCompatVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        compatVersion_ = 1;

        return this;
      }

      // required uint32 incremental_version = 3 [default = 0];
      private int incrementalVersion_ ;
      /**
       * <code>required uint32 incremental_version = 3 [default = 0];</code>
       */
      public boolean hasIncrementalVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 incremental_version = 3 [default = 0];</code>
       */
      public int getIncrementalVersion() {
        return incrementalVersion_;
      }
      /**
       * <code>required uint32 incremental_version = 3 [default = 0];</code>
       */
      public Builder setIncrementalVersion(int value) {
        bitField0_ |= 0x00000004;
        incrementalVersion_ = value;

        return this;
      }
      /**
       * <code>required uint32 incremental_version = 3 [default = 0];</code>
       */
      public Builder clearIncrementalVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        incrementalVersion_ = 0;

        return this;
      }

      // repeated bytes public_key = 4;
      private java.util.List<com.google.protobuf.ByteString> publicKey_ = java.util.Collections.emptyList();
      private void ensurePublicKeyIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          publicKey_ = new java.util.ArrayList<com.google.protobuf.ByteString>(publicKey_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated bytes public_key = 4;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getPublicKeyList() {
        return java.util.Collections.unmodifiableList(publicKey_);
      }
      /**
       * <code>repeated bytes public_key = 4;</code>
       */
      public int getPublicKeyCount() {
        return publicKey_.size();
      }
      /**
       * <code>repeated bytes public_key = 4;</code>
       */
      public com.google.protobuf.ByteString getPublicKey(int index) {
        return publicKey_.get(index);
      }
      /**
       * <code>repeated bytes public_key = 4;</code>
       */
      public Builder setPublicKey(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePublicKeyIsMutable();
        publicKey_.set(index, value);

        return this;
      }
      /**
       * <code>repeated bytes public_key = 4;</code>
       */
      public Builder addPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePublicKeyIsMutable();
        publicKey_.add(value);

        return this;
      }
      /**
       * <code>repeated bytes public_key = 4;</code>
       */
      public Builder addAllPublicKey(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensurePublicKeyIsMutable();
        super.addAll(values, publicKey_);

        return this;
      }
      /**
       * <code>repeated bytes public_key = 4;</code>
       */
      public Builder clearPublicKey() {
        publicKey_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);

        return this;
      }

      // optional bytes challenge = 5;
      private com.google.protobuf.ByteString challenge_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes challenge = 5;</code>
       */
      public boolean hasChallenge() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes challenge = 5;</code>
       */
      public com.google.protobuf.ByteString getChallenge() {
        return challenge_;
      }
      /**
       * <code>optional bytes challenge = 5;</code>
       */
      public Builder setChallenge(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        challenge_ = value;

        return this;
      }
      /**
       * <code>optional bytes challenge = 5;</code>
       */
      public Builder clearChallenge() {
        bitField0_ = (bitField0_ & ~0x00000010);
        challenge_ = getDefaultInstance().getChallenge();

        return this;
      }

      // @@protoc_insertion_point(builder_scope:StudioAPI.Proto.Hello)
    }

    static {
      defaultInstance = new Hello(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:StudioAPI.Proto.Hello)
  }

  public interface ChallengeSolutionOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required bytes public_key = 1;
    /**
     * <code>required bytes public_key = 1;</code>
     */
    boolean hasPublicKey();
    /**
     * <code>required bytes public_key = 1;</code>
     */
    com.google.protobuf.ByteString getPublicKey();

    // required bytes signed_data = 2;
    /**
     * <code>required bytes signed_data = 2;</code>
     */
    boolean hasSignedData();
    /**
     * <code>required bytes signed_data = 2;</code>
     */
    com.google.protobuf.ByteString getSignedData();
  }
  /**
   * Protobuf type {@code StudioAPI.Proto.ChallengeSolution}
   *
   * <pre>
   ** Server expects this response if it sent a challenge.
   * </pre>
   */
  public static final class ChallengeSolution extends
      com.google.protobuf.GeneratedMessageLite
      implements ChallengeSolutionOrBuilder {
    // Use ChallengeSolution.newBuilder() to construct.
    private ChallengeSolution(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private ChallengeSolution(boolean noInit) {}

    private static final ChallengeSolution defaultInstance;
    public static ChallengeSolution getDefaultInstance() {
      return defaultInstance;
    }

    public ChallengeSolution getDefaultInstanceForType() {
      return defaultInstance;
    }

    private ChallengeSolution(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              publicKey_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              signedData_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<ChallengeSolution> PARSER =
        new com.google.protobuf.AbstractParser<ChallengeSolution>() {
      public ChallengeSolution parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChallengeSolution(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChallengeSolution> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes public_key = 1;
    public static final int PUBLIC_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString publicKey_;
    /**
     * <code>required bytes public_key = 1;</code>
     */
    public boolean hasPublicKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes public_key = 1;</code>
     */
    public com.google.protobuf.ByteString getPublicKey() {
      return publicKey_;
    }

    // required bytes signed_data = 2;
    public static final int SIGNED_DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString signedData_;
    /**
     * <code>required bytes signed_data = 2;</code>
     */
    public boolean hasSignedData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes signed_data = 2;</code>
     */
    public com.google.protobuf.ByteString getSignedData() {
      return signedData_;
    }

    private void initFields() {
      publicKey_ = com.google.protobuf.ByteString.EMPTY;
      signedData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPublicKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignedData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, publicKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, signedData_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, publicKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, signedData_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StudioAPI.ChallengeSolution parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.ChallengeSolution parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.ChallengeSolution parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.ChallengeSolution parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.ChallengeSolution parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.ChallengeSolution parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StudioAPI.ChallengeSolution parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StudioAPI.ChallengeSolution parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StudioAPI.ChallengeSolution parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.ChallengeSolution parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StudioAPI.ChallengeSolution prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code StudioAPI.Proto.ChallengeSolution}
     *
     * <pre>
     ** Server expects this response if it sent a challenge.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          StudioAPI.ChallengeSolution, Builder>
        implements StudioAPI.ChallengeSolutionOrBuilder {
      // Construct using StudioAPI.ChallengeSolution.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        publicKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        signedData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public StudioAPI.ChallengeSolution getDefaultInstanceForType() {
        return StudioAPI.ChallengeSolution.getDefaultInstance();
      }

      public StudioAPI.ChallengeSolution build() {
        StudioAPI.ChallengeSolution result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StudioAPI.ChallengeSolution buildPartial() {
        StudioAPI.ChallengeSolution result = new StudioAPI.ChallengeSolution(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.publicKey_ = publicKey_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.signedData_ = signedData_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(StudioAPI.ChallengeSolution other) {
        if (other == StudioAPI.ChallengeSolution.getDefaultInstance()) return this;
        if (other.hasPublicKey()) {
          setPublicKey(other.getPublicKey());
        }
        if (other.hasSignedData()) {
          setSignedData(other.getSignedData());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPublicKey()) {

          return false;
        }
        if (!hasSignedData()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StudioAPI.ChallengeSolution parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StudioAPI.ChallengeSolution) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes public_key = 1;
      private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes public_key = 1;</code>
       */
      public boolean hasPublicKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes public_key = 1;</code>
       */
      public com.google.protobuf.ByteString getPublicKey() {
        return publicKey_;
      }
      /**
       * <code>required bytes public_key = 1;</code>
       */
      public Builder setPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        publicKey_ = value;

        return this;
      }
      /**
       * <code>required bytes public_key = 1;</code>
       */
      public Builder clearPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        publicKey_ = getDefaultInstance().getPublicKey();

        return this;
      }

      // required bytes signed_data = 2;
      private com.google.protobuf.ByteString signedData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes signed_data = 2;</code>
       */
      public boolean hasSignedData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes signed_data = 2;</code>
       */
      public com.google.protobuf.ByteString getSignedData() {
        return signedData_;
      }
      /**
       * <code>required bytes signed_data = 2;</code>
       */
      public Builder setSignedData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        signedData_ = value;

        return this;
      }
      /**
       * <code>required bytes signed_data = 2;</code>
       */
      public Builder clearSignedData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        signedData_ = getDefaultInstance().getSignedData();

        return this;
      }

      // @@protoc_insertion_point(builder_scope:StudioAPI.Proto.ChallengeSolution)
    }

    static {
      defaultInstance = new ChallengeSolution(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:StudioAPI.Proto.ChallengeSolution)
  }

  public interface ChallengeResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required bool success = 1;
    /**
     * <code>required bool success = 1;</code>
     */
    boolean hasSuccess();
    /**
     * <code>required bool success = 1;</code>
     */
    boolean getSuccess();
  }
  /**
   * Protobuf type {@code StudioAPI.Proto.ChallengeResponse}
   *
   * <pre>
   ** Sent by server as a response to a ChallengeSolution.
   * </pre>
   */
  public static final class ChallengeResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements ChallengeResponseOrBuilder {
    // Use ChallengeResponse.newBuilder() to construct.
    private ChallengeResponse(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private ChallengeResponse(boolean noInit) {}

    private static final ChallengeResponse defaultInstance;
    public static ChallengeResponse getDefaultInstance() {
      return defaultInstance;
    }

    public ChallengeResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private ChallengeResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              success_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<ChallengeResponse> PARSER =
        new com.google.protobuf.AbstractParser<ChallengeResponse>() {
      public ChallengeResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChallengeResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChallengeResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bool success = 1;
    public static final int SUCCESS_FIELD_NUMBER = 1;
    private boolean success_;
    /**
     * <code>required bool success = 1;</code>
     */
    public boolean hasSuccess() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool success = 1;</code>
     */
    public boolean getSuccess() {
      return success_;
    }

    private void initFields() {
      success_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSuccess()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, success_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, success_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StudioAPI.ChallengeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.ChallengeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.ChallengeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.ChallengeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.ChallengeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.ChallengeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StudioAPI.ChallengeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StudioAPI.ChallengeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StudioAPI.ChallengeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.ChallengeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StudioAPI.ChallengeResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code StudioAPI.Proto.ChallengeResponse}
     *
     * <pre>
     ** Sent by server as a response to a ChallengeSolution.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          StudioAPI.ChallengeResponse, Builder>
        implements StudioAPI.ChallengeResponseOrBuilder {
      // Construct using StudioAPI.ChallengeResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        success_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public StudioAPI.ChallengeResponse getDefaultInstanceForType() {
        return StudioAPI.ChallengeResponse.getDefaultInstance();
      }

      public StudioAPI.ChallengeResponse build() {
        StudioAPI.ChallengeResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StudioAPI.ChallengeResponse buildPartial() {
        StudioAPI.ChallengeResponse result = new StudioAPI.ChallengeResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.success_ = success_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(StudioAPI.ChallengeResponse other) {
        if (other == StudioAPI.ChallengeResponse.getDefaultInstance()) return this;
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuccess()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StudioAPI.ChallengeResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StudioAPI.ChallengeResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bool success = 1;
      private boolean success_ ;
      /**
       * <code>required bool success = 1;</code>
       */
      public boolean hasSuccess() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public boolean getSuccess() {
        return success_;
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public Builder setSuccess(boolean value) {
        bitField0_ |= 0x00000001;
        success_ = value;

        return this;
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public Builder clearSuccess() {
        bitField0_ = (bitField0_ & ~0x00000001);
        success_ = false;

        return this;
      }

      // @@protoc_insertion_point(builder_scope:StudioAPI.Proto.ChallengeResponse)
    }

    static {
      defaultInstance = new ChallengeResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:StudioAPI.Proto.ChallengeResponse)
  }

  public interface ContainerOrBuilder extends
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<Container> {

    // optional .StudioAPI.Proto.Container.Type message_type = 1;
    /**
     * <code>optional .StudioAPI.Proto.Container.Type message_type = 1;</code>
     */
    boolean hasMessageType();
    /**
     * <code>optional .StudioAPI.Proto.Container.Type message_type = 1;</code>
     */
    StudioAPI.Container.Type getMessageType();

    // optional .StudioAPI.Proto.Error error = 2;
    /**
     * <code>optional .StudioAPI.Proto.Error error = 2;</code>
     */
    boolean hasError();
    /**
     * <code>optional .StudioAPI.Proto.Error error = 2;</code>
     */
    StudioAPI.Error getError();

    // repeated uint32 structure_request = 3;
    /**
     * <code>repeated uint32 structure_request = 3;</code>
     */
    java.util.List<java.lang.Integer> getStructureRequestList();
    /**
     * <code>repeated uint32 structure_request = 3;</code>
     */
    int getStructureRequestCount();
    /**
     * <code>repeated uint32 structure_request = 3;</code>
     */
    int getStructureRequest(int index);

    // repeated .StudioAPI.Proto.Node structure_response = 4;
    /**
     * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
     */
    java.util.List<StudioAPI.Node>
        getStructureResponseList();
    /**
     * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
     */
    StudioAPI.Node getStructureResponse(int index);
    /**
     * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
     */
    int getStructureResponseCount();

    // repeated .StudioAPI.Proto.ValueRequest getter_request = 5;
    /**
     * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
     */
    java.util.List<StudioAPI.ValueRequest>
        getGetterRequestList();
    /**
     * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
     */
    StudioAPI.ValueRequest getGetterRequest(int index);
    /**
     * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
     */
    int getGetterRequestCount();

    // repeated .StudioAPI.Proto.VariantValue getter_response = 6;
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
     */
    java.util.List<StudioAPI.VariantValue>
        getGetterResponseList();
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
     */
    StudioAPI.VariantValue getGetterResponse(int index);
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
     */
    int getGetterResponseCount();

    // repeated .StudioAPI.Proto.VariantValue setter_request = 7;
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
     */
    java.util.List<StudioAPI.VariantValue>
        getSetterRequestList();
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
     */
    StudioAPI.VariantValue getSetterRequest(int index);
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
     */
    int getSetterRequestCount();

    // repeated uint32 structure_change_response = 8;
    /**
     * <code>repeated uint32 structure_change_response = 8;</code>
     *
     * <pre>
     * node ID's which need new structure requests
     * </pre>
     */
    java.util.List<java.lang.Integer> getStructureChangeResponseList();
    /**
     * <code>repeated uint32 structure_change_response = 8;</code>
     *
     * <pre>
     * node ID's which need new structure requests
     * </pre>
     */
    int getStructureChangeResponseCount();
    /**
     * <code>repeated uint32 structure_change_response = 8;</code>
     *
     * <pre>
     * node ID's which need new structure requests
     * </pre>
     */
    int getStructureChangeResponse(int index);

    // optional uint64 current_time_response = 9;
    /**
     * <code>optional uint64 current_time_response = 9;</code>
     */
    boolean hasCurrentTimeResponse();
    /**
     * <code>optional uint64 current_time_response = 9;</code>
     */
    long getCurrentTimeResponse();
  }
  /**
   * Protobuf type {@code StudioAPI.Proto.Container}
   *
   * <pre>
   ** Common union-style base type for all Protobuf messages in StudioAPI.
   * </pre>
   */
  public static final class Container extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        Container> implements ContainerOrBuilder {
    // Use Container.newBuilder() to construct.
    private Container(com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<StudioAPI.Container, ?> builder) {
      super(builder);

    }
    private Container(boolean noInit) {}

    private static final Container defaultInstance;
    public static Container getDefaultInstance() {
      return defaultInstance;
    }

    public Container getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Container(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              StudioAPI.Container.Type value = StudioAPI.Container.Type.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                messageType_ = value;
              }
              break;
            }
            case 18: {
              StudioAPI.Error.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(StudioAPI.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                structureRequest_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              structureRequest_.add(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                structureRequest_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                structureRequest_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                structureResponse_ = new java.util.ArrayList<StudioAPI.Node>();
                mutable_bitField0_ |= 0x00000008;
              }
              structureResponse_.add(input.readMessage(StudioAPI.Node.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                getterRequest_ = new java.util.ArrayList<StudioAPI.ValueRequest>();
                mutable_bitField0_ |= 0x00000010;
              }
              getterRequest_.add(input.readMessage(StudioAPI.ValueRequest.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                getterResponse_ = new java.util.ArrayList<StudioAPI.VariantValue>();
                mutable_bitField0_ |= 0x00000020;
              }
              getterResponse_.add(input.readMessage(StudioAPI.VariantValue.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                setterRequest_ = new java.util.ArrayList<StudioAPI.VariantValue>();
                mutable_bitField0_ |= 0x00000040;
              }
              setterRequest_.add(input.readMessage(StudioAPI.VariantValue.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                structureChangeResponse_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              structureChangeResponse_.add(input.readUInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                structureChangeResponse_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                structureChangeResponse_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000004;
              currentTimeResponse_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          structureRequest_ = java.util.Collections.unmodifiableList(structureRequest_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          structureResponse_ = java.util.Collections.unmodifiableList(structureResponse_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          getterRequest_ = java.util.Collections.unmodifiableList(getterRequest_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          getterResponse_ = java.util.Collections.unmodifiableList(getterResponse_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          setterRequest_ = java.util.Collections.unmodifiableList(setterRequest_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          structureChangeResponse_ = java.util.Collections.unmodifiableList(structureChangeResponse_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Container> PARSER =
        new com.google.protobuf.AbstractParser<Container>() {
      public Container parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Container(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Container> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code StudioAPI.Proto.Container.Type}
     */
    public enum Type
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>eRemoteError = 0;</code>
       */
      eRemoteError(0, 0),
      /**
       * <code>eStructureRequest = 1;</code>
       */
      eStructureRequest(1, 1),
      /**
       * <code>eStructureResponse = 2;</code>
       */
      eStructureResponse(2, 2),
      /**
       * <code>eGetterRequest = 3;</code>
       */
      eGetterRequest(3, 3),
      /**
       * <code>eGetterResponse = 4;</code>
       */
      eGetterResponse(4, 4),
      /**
       * <code>eSetterRequest = 5;</code>
       */
      eSetterRequest(5, 5),
      /**
       * <code>eStructureChangeResponse = 6;</code>
       */
      eStructureChangeResponse(6, 6),
      /**
       * <code>eCurrentTimeRequest = 7;</code>
       */
      eCurrentTimeRequest(7, 7),
      /**
       * <code>eCurrentTimeResponse = 8;</code>
       */
      eCurrentTimeResponse(8, 8),
      ;

      /**
       * <code>eRemoteError = 0;</code>
       */
      public static final int eRemoteError_VALUE = 0;
      /**
       * <code>eStructureRequest = 1;</code>
       */
      public static final int eStructureRequest_VALUE = 1;
      /**
       * <code>eStructureResponse = 2;</code>
       */
      public static final int eStructureResponse_VALUE = 2;
      /**
       * <code>eGetterRequest = 3;</code>
       */
      public static final int eGetterRequest_VALUE = 3;
      /**
       * <code>eGetterResponse = 4;</code>
       */
      public static final int eGetterResponse_VALUE = 4;
      /**
       * <code>eSetterRequest = 5;</code>
       */
      public static final int eSetterRequest_VALUE = 5;
      /**
       * <code>eStructureChangeResponse = 6;</code>
       */
      public static final int eStructureChangeResponse_VALUE = 6;
      /**
       * <code>eCurrentTimeRequest = 7;</code>
       */
      public static final int eCurrentTimeRequest_VALUE = 7;
      /**
       * <code>eCurrentTimeResponse = 8;</code>
       */
      public static final int eCurrentTimeResponse_VALUE = 8;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 0: return eRemoteError;
          case 1: return eStructureRequest;
          case 2: return eStructureResponse;
          case 3: return eGetterRequest;
          case 4: return eGetterResponse;
          case 5: return eSetterRequest;
          case 6: return eStructureChangeResponse;
          case 7: return eCurrentTimeRequest;
          case 8: return eCurrentTimeResponse;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      private final int value;

      private Type(int index, int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:StudioAPI.Proto.Container.Type)
    }

    private int bitField0_;
    // optional .StudioAPI.Proto.Container.Type message_type = 1;
    public static final int MESSAGE_TYPE_FIELD_NUMBER = 1;
    private StudioAPI.Container.Type messageType_;
    /**
     * <code>optional .StudioAPI.Proto.Container.Type message_type = 1;</code>
     */
    public boolean hasMessageType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .StudioAPI.Proto.Container.Type message_type = 1;</code>
     */
    public StudioAPI.Container.Type getMessageType() {
      return messageType_;
    }

    // optional .StudioAPI.Proto.Error error = 2;
    public static final int ERROR_FIELD_NUMBER = 2;
    private StudioAPI.Error error_;
    /**
     * <code>optional .StudioAPI.Proto.Error error = 2;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .StudioAPI.Proto.Error error = 2;</code>
     */
    public StudioAPI.Error getError() {
      return error_;
    }

    // repeated uint32 structure_request = 3;
    public static final int STRUCTURE_REQUEST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> structureRequest_;
    /**
     * <code>repeated uint32 structure_request = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getStructureRequestList() {
      return structureRequest_;
    }
    /**
     * <code>repeated uint32 structure_request = 3;</code>
     */
    public int getStructureRequestCount() {
      return structureRequest_.size();
    }
    /**
     * <code>repeated uint32 structure_request = 3;</code>
     */
    public int getStructureRequest(int index) {
      return structureRequest_.get(index);
    }

    // repeated .StudioAPI.Proto.Node structure_response = 4;
    public static final int STRUCTURE_RESPONSE_FIELD_NUMBER = 4;
    private java.util.List<StudioAPI.Node> structureResponse_;
    /**
     * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
     */
    public java.util.List<StudioAPI.Node> getStructureResponseList() {
      return structureResponse_;
    }
    /**
     * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
     */
    public java.util.List<? extends StudioAPI.NodeOrBuilder>
        getStructureResponseOrBuilderList() {
      return structureResponse_;
    }
    /**
     * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
     */
    public int getStructureResponseCount() {
      return structureResponse_.size();
    }
    /**
     * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
     */
    public StudioAPI.Node getStructureResponse(int index) {
      return structureResponse_.get(index);
    }
    /**
     * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
     */
    public StudioAPI.NodeOrBuilder getStructureResponseOrBuilder(
        int index) {
      return structureResponse_.get(index);
    }

    // repeated .StudioAPI.Proto.ValueRequest getter_request = 5;
    public static final int GETTER_REQUEST_FIELD_NUMBER = 5;
    private java.util.List<StudioAPI.ValueRequest> getterRequest_;
    /**
     * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
     */
    public java.util.List<StudioAPI.ValueRequest> getGetterRequestList() {
      return getterRequest_;
    }
    /**
     * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
     */
    public java.util.List<? extends StudioAPI.ValueRequestOrBuilder>
        getGetterRequestOrBuilderList() {
      return getterRequest_;
    }
    /**
     * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
     */
    public int getGetterRequestCount() {
      return getterRequest_.size();
    }
    /**
     * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
     */
    public StudioAPI.ValueRequest getGetterRequest(int index) {
      return getterRequest_.get(index);
    }
    /**
     * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
     */
    public StudioAPI.ValueRequestOrBuilder getGetterRequestOrBuilder(
        int index) {
      return getterRequest_.get(index);
    }

    // repeated .StudioAPI.Proto.VariantValue getter_response = 6;
    public static final int GETTER_RESPONSE_FIELD_NUMBER = 6;
    private java.util.List<StudioAPI.VariantValue> getterResponse_;
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
     */
    public java.util.List<StudioAPI.VariantValue> getGetterResponseList() {
      return getterResponse_;
    }
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
     */
    public java.util.List<? extends StudioAPI.VariantValueOrBuilder>
        getGetterResponseOrBuilderList() {
      return getterResponse_;
    }
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
     */
    public int getGetterResponseCount() {
      return getterResponse_.size();
    }
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
     */
    public StudioAPI.VariantValue getGetterResponse(int index) {
      return getterResponse_.get(index);
    }
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
     */
    public StudioAPI.VariantValueOrBuilder getGetterResponseOrBuilder(
        int index) {
      return getterResponse_.get(index);
    }

    // repeated .StudioAPI.Proto.VariantValue setter_request = 7;
    public static final int SETTER_REQUEST_FIELD_NUMBER = 7;
    private java.util.List<StudioAPI.VariantValue> setterRequest_;
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
     */
    public java.util.List<StudioAPI.VariantValue> getSetterRequestList() {
      return setterRequest_;
    }
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
     */
    public java.util.List<? extends StudioAPI.VariantValueOrBuilder>
        getSetterRequestOrBuilderList() {
      return setterRequest_;
    }
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
     */
    public int getSetterRequestCount() {
      return setterRequest_.size();
    }
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
     */
    public StudioAPI.VariantValue getSetterRequest(int index) {
      return setterRequest_.get(index);
    }
    /**
     * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
     */
    public StudioAPI.VariantValueOrBuilder getSetterRequestOrBuilder(
        int index) {
      return setterRequest_.get(index);
    }

    // repeated uint32 structure_change_response = 8;
    public static final int STRUCTURE_CHANGE_RESPONSE_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> structureChangeResponse_;
    /**
     * <code>repeated uint32 structure_change_response = 8;</code>
     *
     * <pre>
     * node ID's which need new structure requests
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getStructureChangeResponseList() {
      return structureChangeResponse_;
    }
    /**
     * <code>repeated uint32 structure_change_response = 8;</code>
     *
     * <pre>
     * node ID's which need new structure requests
     * </pre>
     */
    public int getStructureChangeResponseCount() {
      return structureChangeResponse_.size();
    }
    /**
     * <code>repeated uint32 structure_change_response = 8;</code>
     *
     * <pre>
     * node ID's which need new structure requests
     * </pre>
     */
    public int getStructureChangeResponse(int index) {
      return structureChangeResponse_.get(index);
    }

    // optional uint64 current_time_response = 9;
    public static final int CURRENT_TIME_RESPONSE_FIELD_NUMBER = 9;
    private long currentTimeResponse_;
    /**
     * <code>optional uint64 current_time_response = 9;</code>
     */
    public boolean hasCurrentTimeResponse() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 current_time_response = 9;</code>
     */
    public long getCurrentTimeResponse() {
      return currentTimeResponse_;
    }

    private void initFields() {
      messageType_ = StudioAPI.Container.Type.eRemoteError;
      error_ = StudioAPI.Error.getDefaultInstance();
      structureRequest_ = java.util.Collections.emptyList();
      structureResponse_ = java.util.Collections.emptyList();
      getterRequest_ = java.util.Collections.emptyList();
      getterResponse_ = java.util.Collections.emptyList();
      setterRequest_ = java.util.Collections.emptyList();
      structureChangeResponse_ = java.util.Collections.emptyList();
      currentTimeResponse_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasError()) {
        if (!getError().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getStructureResponseCount(); i++) {
        if (!getStructureResponse(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGetterRequestCount(); i++) {
        if (!getGetterRequest(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGetterResponseCount(); i++) {
        if (!getGetterResponse(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSetterRequestCount(); i++) {
        if (!getSetterRequest(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<StudioAPI.Container>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, messageType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, error_);
      }
      for (int i = 0; i < structureRequest_.size(); i++) {
        output.writeUInt32(3, structureRequest_.get(i));
      }
      for (int i = 0; i < structureResponse_.size(); i++) {
        output.writeMessage(4, structureResponse_.get(i));
      }
      for (int i = 0; i < getterRequest_.size(); i++) {
        output.writeMessage(5, getterRequest_.get(i));
      }
      for (int i = 0; i < getterResponse_.size(); i++) {
        output.writeMessage(6, getterResponse_.get(i));
      }
      for (int i = 0; i < setterRequest_.size(); i++) {
        output.writeMessage(7, setterRequest_.get(i));
      }
      for (int i = 0; i < structureChangeResponse_.size(); i++) {
        output.writeUInt32(8, structureChangeResponse_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(9, currentTimeResponse_);
      }
      extensionWriter.writeUntil(536870912, output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, messageType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, error_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < structureRequest_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(structureRequest_.get(i));
        }
        size += dataSize;
        size += 1 * getStructureRequestList().size();
      }
      for (int i = 0; i < structureResponse_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, structureResponse_.get(i));
      }
      for (int i = 0; i < getterRequest_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getterRequest_.get(i));
      }
      for (int i = 0; i < getterResponse_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getterResponse_.get(i));
      }
      for (int i = 0; i < setterRequest_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, setterRequest_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < structureChangeResponse_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(structureChangeResponse_.get(i));
        }
        size += dataSize;
        size += 1 * getStructureChangeResponseList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, currentTimeResponse_);
      }
      size += extensionsSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StudioAPI.Container parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.Container parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.Container parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.Container parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.Container parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.Container parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StudioAPI.Container parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StudioAPI.Container parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StudioAPI.Container parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.Container parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StudioAPI.Container prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code StudioAPI.Proto.Container}
     *
     * <pre>
     ** Common union-style base type for all Protobuf messages in StudioAPI.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          StudioAPI.Container, Builder> implements StudioAPI.ContainerOrBuilder {
      // Construct using StudioAPI.Container.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        messageType_ = StudioAPI.Container.Type.eRemoteError;
        bitField0_ = (bitField0_ & ~0x00000001);
        error_ = StudioAPI.Error.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        structureRequest_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        structureResponse_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        getterRequest_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        getterResponse_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        setterRequest_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        structureChangeResponse_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        currentTimeResponse_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public StudioAPI.Container getDefaultInstanceForType() {
        return StudioAPI.Container.getDefaultInstance();
      }

      public StudioAPI.Container build() {
        StudioAPI.Container result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StudioAPI.Container buildPartial() {
        StudioAPI.Container result = new StudioAPI.Container(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageType_ = messageType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.error_ = error_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          structureRequest_ = java.util.Collections.unmodifiableList(structureRequest_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.structureRequest_ = structureRequest_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          structureResponse_ = java.util.Collections.unmodifiableList(structureResponse_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.structureResponse_ = structureResponse_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          getterRequest_ = java.util.Collections.unmodifiableList(getterRequest_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.getterRequest_ = getterRequest_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          getterResponse_ = java.util.Collections.unmodifiableList(getterResponse_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.getterResponse_ = getterResponse_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          setterRequest_ = java.util.Collections.unmodifiableList(setterRequest_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.setterRequest_ = setterRequest_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          structureChangeResponse_ = java.util.Collections.unmodifiableList(structureChangeResponse_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.structureChangeResponse_ = structureChangeResponse_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000004;
        }
        result.currentTimeResponse_ = currentTimeResponse_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(StudioAPI.Container other) {
        if (other == StudioAPI.Container.getDefaultInstance()) return this;
        if (other.hasMessageType()) {
          setMessageType(other.getMessageType());
        }
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (!other.structureRequest_.isEmpty()) {
          if (structureRequest_.isEmpty()) {
            structureRequest_ = other.structureRequest_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureStructureRequestIsMutable();
            structureRequest_.addAll(other.structureRequest_);
          }

        }
        if (!other.structureResponse_.isEmpty()) {
          if (structureResponse_.isEmpty()) {
            structureResponse_ = other.structureResponse_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureStructureResponseIsMutable();
            structureResponse_.addAll(other.structureResponse_);
          }

        }
        if (!other.getterRequest_.isEmpty()) {
          if (getterRequest_.isEmpty()) {
            getterRequest_ = other.getterRequest_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureGetterRequestIsMutable();
            getterRequest_.addAll(other.getterRequest_);
          }

        }
        if (!other.getterResponse_.isEmpty()) {
          if (getterResponse_.isEmpty()) {
            getterResponse_ = other.getterResponse_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureGetterResponseIsMutable();
            getterResponse_.addAll(other.getterResponse_);
          }

        }
        if (!other.setterRequest_.isEmpty()) {
          if (setterRequest_.isEmpty()) {
            setterRequest_ = other.setterRequest_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureSetterRequestIsMutable();
            setterRequest_.addAll(other.setterRequest_);
          }

        }
        if (!other.structureChangeResponse_.isEmpty()) {
          if (structureChangeResponse_.isEmpty()) {
            structureChangeResponse_ = other.structureChangeResponse_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureStructureChangeResponseIsMutable();
            structureChangeResponse_.addAll(other.structureChangeResponse_);
          }

        }
        if (other.hasCurrentTimeResponse()) {
          setCurrentTimeResponse(other.getCurrentTimeResponse());
        }
        this.mergeExtensionFields(other);
        return this;
      }

      public final boolean isInitialized() {
        if (hasError()) {
          if (!getError().isInitialized()) {

            return false;
          }
        }
        for (int i = 0; i < getStructureResponseCount(); i++) {
          if (!getStructureResponse(i).isInitialized()) {

            return false;
          }
        }
        for (int i = 0; i < getGetterRequestCount(); i++) {
          if (!getGetterRequest(i).isInitialized()) {

            return false;
          }
        }
        for (int i = 0; i < getGetterResponseCount(); i++) {
          if (!getGetterResponse(i).isInitialized()) {

            return false;
          }
        }
        for (int i = 0; i < getSetterRequestCount(); i++) {
          if (!getSetterRequest(i).isInitialized()) {

            return false;
          }
        }
        if (!extensionsAreInitialized()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StudioAPI.Container parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StudioAPI.Container) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .StudioAPI.Proto.Container.Type message_type = 1;
      private StudioAPI.Container.Type messageType_ = StudioAPI.Container.Type.eRemoteError;
      /**
       * <code>optional .StudioAPI.Proto.Container.Type message_type = 1;</code>
       */
      public boolean hasMessageType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .StudioAPI.Proto.Container.Type message_type = 1;</code>
       */
      public StudioAPI.Container.Type getMessageType() {
        return messageType_;
      }
      /**
       * <code>optional .StudioAPI.Proto.Container.Type message_type = 1;</code>
       */
      public Builder setMessageType(StudioAPI.Container.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        messageType_ = value;

        return this;
      }
      /**
       * <code>optional .StudioAPI.Proto.Container.Type message_type = 1;</code>
       */
      public Builder clearMessageType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageType_ = StudioAPI.Container.Type.eRemoteError;

        return this;
      }

      // optional .StudioAPI.Proto.Error error = 2;
      private StudioAPI.Error error_ = StudioAPI.Error.getDefaultInstance();
      /**
       * <code>optional .StudioAPI.Proto.Error error = 2;</code>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .StudioAPI.Proto.Error error = 2;</code>
       */
      public StudioAPI.Error getError() {
        return error_;
      }
      /**
       * <code>optional .StudioAPI.Proto.Error error = 2;</code>
       */
      public Builder setError(StudioAPI.Error value) {
        if (value == null) {
          throw new NullPointerException();
        }
        error_ = value;

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .StudioAPI.Proto.Error error = 2;</code>
       */
      public Builder setError(
          StudioAPI.Error.Builder builderForValue) {
        error_ = builderForValue.build();

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .StudioAPI.Proto.Error error = 2;</code>
       */
      public Builder mergeError(StudioAPI.Error value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            error_ != StudioAPI.Error.getDefaultInstance()) {
          error_ =
            StudioAPI.Error.newBuilder(error_).mergeFrom(value).buildPartial();
        } else {
          error_ = value;
        }

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .StudioAPI.Proto.Error error = 2;</code>
       */
      public Builder clearError() {
        error_ = StudioAPI.Error.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      // repeated uint32 structure_request = 3;
      private java.util.List<java.lang.Integer> structureRequest_ = java.util.Collections.emptyList();
      private void ensureStructureRequestIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          structureRequest_ = new java.util.ArrayList<java.lang.Integer>(structureRequest_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 structure_request = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getStructureRequestList() {
        return java.util.Collections.unmodifiableList(structureRequest_);
      }
      /**
       * <code>repeated uint32 structure_request = 3;</code>
       */
      public int getStructureRequestCount() {
        return structureRequest_.size();
      }
      /**
       * <code>repeated uint32 structure_request = 3;</code>
       */
      public int getStructureRequest(int index) {
        return structureRequest_.get(index);
      }
      /**
       * <code>repeated uint32 structure_request = 3;</code>
       */
      public Builder setStructureRequest(
          int index, int value) {
        ensureStructureRequestIsMutable();
        structureRequest_.set(index, value);

        return this;
      }
      /**
       * <code>repeated uint32 structure_request = 3;</code>
       */
      public Builder addStructureRequest(int value) {
        ensureStructureRequestIsMutable();
        structureRequest_.add(value);

        return this;
      }
      /**
       * <code>repeated uint32 structure_request = 3;</code>
       */
      public Builder addAllStructureRequest(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStructureRequestIsMutable();
        super.addAll(values, structureRequest_);

        return this;
      }
      /**
       * <code>repeated uint32 structure_request = 3;</code>
       */
      public Builder clearStructureRequest() {
        structureRequest_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);

        return this;
      }

      // repeated .StudioAPI.Proto.Node structure_response = 4;
      private java.util.List<StudioAPI.Node> structureResponse_ =
        java.util.Collections.emptyList();
      private void ensureStructureResponseIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          structureResponse_ = new java.util.ArrayList<StudioAPI.Node>(structureResponse_);
          bitField0_ |= 0x00000008;
         }
      }

      /**
       * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
       */
      public java.util.List<StudioAPI.Node> getStructureResponseList() {
        return java.util.Collections.unmodifiableList(structureResponse_);
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
       */
      public int getStructureResponseCount() {
        return structureResponse_.size();
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
       */
      public StudioAPI.Node getStructureResponse(int index) {
        return structureResponse_.get(index);
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
       */
      public Builder setStructureResponse(
          int index, StudioAPI.Node value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStructureResponseIsMutable();
        structureResponse_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
       */
      public Builder setStructureResponse(
          int index, StudioAPI.Node.Builder builderForValue) {
        ensureStructureResponseIsMutable();
        structureResponse_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
       */
      public Builder addStructureResponse(StudioAPI.Node value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStructureResponseIsMutable();
        structureResponse_.add(value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
       */
      public Builder addStructureResponse(
          int index, StudioAPI.Node value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStructureResponseIsMutable();
        structureResponse_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
       */
      public Builder addStructureResponse(
          StudioAPI.Node.Builder builderForValue) {
        ensureStructureResponseIsMutable();
        structureResponse_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
       */
      public Builder addStructureResponse(
          int index, StudioAPI.Node.Builder builderForValue) {
        ensureStructureResponseIsMutable();
        structureResponse_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
       */
      public Builder addAllStructureResponse(
          java.lang.Iterable<? extends StudioAPI.Node> values) {
        ensureStructureResponseIsMutable();
        super.addAll(values, structureResponse_);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
       */
      public Builder clearStructureResponse() {
        structureResponse_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node structure_response = 4;</code>
       */
      public Builder removeStructureResponse(int index) {
        ensureStructureResponseIsMutable();
        structureResponse_.remove(index);

        return this;
      }

      // repeated .StudioAPI.Proto.ValueRequest getter_request = 5;
      private java.util.List<StudioAPI.ValueRequest> getterRequest_ =
        java.util.Collections.emptyList();
      private void ensureGetterRequestIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          getterRequest_ = new java.util.ArrayList<StudioAPI.ValueRequest>(getterRequest_);
          bitField0_ |= 0x00000010;
         }
      }

      /**
       * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
       */
      public java.util.List<StudioAPI.ValueRequest> getGetterRequestList() {
        return java.util.Collections.unmodifiableList(getterRequest_);
      }
      /**
       * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
       */
      public int getGetterRequestCount() {
        return getterRequest_.size();
      }
      /**
       * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
       */
      public StudioAPI.ValueRequest getGetterRequest(int index) {
        return getterRequest_.get(index);
      }
      /**
       * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
       */
      public Builder setGetterRequest(
          int index, StudioAPI.ValueRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGetterRequestIsMutable();
        getterRequest_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
       */
      public Builder setGetterRequest(
          int index, StudioAPI.ValueRequest.Builder builderForValue) {
        ensureGetterRequestIsMutable();
        getterRequest_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
       */
      public Builder addGetterRequest(StudioAPI.ValueRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGetterRequestIsMutable();
        getterRequest_.add(value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
       */
      public Builder addGetterRequest(
          int index, StudioAPI.ValueRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGetterRequestIsMutable();
        getterRequest_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
       */
      public Builder addGetterRequest(
          StudioAPI.ValueRequest.Builder builderForValue) {
        ensureGetterRequestIsMutable();
        getterRequest_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
       */
      public Builder addGetterRequest(
          int index, StudioAPI.ValueRequest.Builder builderForValue) {
        ensureGetterRequestIsMutable();
        getterRequest_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
       */
      public Builder addAllGetterRequest(
          java.lang.Iterable<? extends StudioAPI.ValueRequest> values) {
        ensureGetterRequestIsMutable();
        super.addAll(values, getterRequest_);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
       */
      public Builder clearGetterRequest() {
        getterRequest_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.ValueRequest getter_request = 5;</code>
       */
      public Builder removeGetterRequest(int index) {
        ensureGetterRequestIsMutable();
        getterRequest_.remove(index);

        return this;
      }

      // repeated .StudioAPI.Proto.VariantValue getter_response = 6;
      private java.util.List<StudioAPI.VariantValue> getterResponse_ =
        java.util.Collections.emptyList();
      private void ensureGetterResponseIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          getterResponse_ = new java.util.ArrayList<StudioAPI.VariantValue>(getterResponse_);
          bitField0_ |= 0x00000020;
         }
      }

      /**
       * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
       */
      public java.util.List<StudioAPI.VariantValue> getGetterResponseList() {
        return java.util.Collections.unmodifiableList(getterResponse_);
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
       */
      public int getGetterResponseCount() {
        return getterResponse_.size();
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
       */
      public StudioAPI.VariantValue getGetterResponse(int index) {
        return getterResponse_.get(index);
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
       */
      public Builder setGetterResponse(
          int index, StudioAPI.VariantValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGetterResponseIsMutable();
        getterResponse_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
       */
      public Builder setGetterResponse(
          int index, StudioAPI.VariantValue.Builder builderForValue) {
        ensureGetterResponseIsMutable();
        getterResponse_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
       */
      public Builder addGetterResponse(StudioAPI.VariantValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGetterResponseIsMutable();
        getterResponse_.add(value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
       */
      public Builder addGetterResponse(
          int index, StudioAPI.VariantValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGetterResponseIsMutable();
        getterResponse_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
       */
      public Builder addGetterResponse(
          StudioAPI.VariantValue.Builder builderForValue) {
        ensureGetterResponseIsMutable();
        getterResponse_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
       */
      public Builder addGetterResponse(
          int index, StudioAPI.VariantValue.Builder builderForValue) {
        ensureGetterResponseIsMutable();
        getterResponse_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
       */
      public Builder addAllGetterResponse(
          java.lang.Iterable<? extends StudioAPI.VariantValue> values) {
        ensureGetterResponseIsMutable();
        super.addAll(values, getterResponse_);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
       */
      public Builder clearGetterResponse() {
        getterResponse_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue getter_response = 6;</code>
       */
      public Builder removeGetterResponse(int index) {
        ensureGetterResponseIsMutable();
        getterResponse_.remove(index);

        return this;
      }

      // repeated .StudioAPI.Proto.VariantValue setter_request = 7;
      private java.util.List<StudioAPI.VariantValue> setterRequest_ =
        java.util.Collections.emptyList();
      private void ensureSetterRequestIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          setterRequest_ = new java.util.ArrayList<StudioAPI.VariantValue>(setterRequest_);
          bitField0_ |= 0x00000040;
         }
      }

      /**
       * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
       */
      public java.util.List<StudioAPI.VariantValue> getSetterRequestList() {
        return java.util.Collections.unmodifiableList(setterRequest_);
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
       */
      public int getSetterRequestCount() {
        return setterRequest_.size();
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
       */
      public StudioAPI.VariantValue getSetterRequest(int index) {
        return setterRequest_.get(index);
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
       */
      public Builder setSetterRequest(
          int index, StudioAPI.VariantValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSetterRequestIsMutable();
        setterRequest_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
       */
      public Builder setSetterRequest(
          int index, StudioAPI.VariantValue.Builder builderForValue) {
        ensureSetterRequestIsMutable();
        setterRequest_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
       */
      public Builder addSetterRequest(StudioAPI.VariantValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSetterRequestIsMutable();
        setterRequest_.add(value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
       */
      public Builder addSetterRequest(
          int index, StudioAPI.VariantValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSetterRequestIsMutable();
        setterRequest_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
       */
      public Builder addSetterRequest(
          StudioAPI.VariantValue.Builder builderForValue) {
        ensureSetterRequestIsMutable();
        setterRequest_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
       */
      public Builder addSetterRequest(
          int index, StudioAPI.VariantValue.Builder builderForValue) {
        ensureSetterRequestIsMutable();
        setterRequest_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
       */
      public Builder addAllSetterRequest(
          java.lang.Iterable<? extends StudioAPI.VariantValue> values) {
        ensureSetterRequestIsMutable();
        super.addAll(values, setterRequest_);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
       */
      public Builder clearSetterRequest() {
        setterRequest_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.VariantValue setter_request = 7;</code>
       */
      public Builder removeSetterRequest(int index) {
        ensureSetterRequestIsMutable();
        setterRequest_.remove(index);

        return this;
      }

      // repeated uint32 structure_change_response = 8;
      private java.util.List<java.lang.Integer> structureChangeResponse_ = java.util.Collections.emptyList();
      private void ensureStructureChangeResponseIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          structureChangeResponse_ = new java.util.ArrayList<java.lang.Integer>(structureChangeResponse_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated uint32 structure_change_response = 8;</code>
       *
       * <pre>
       * node ID's which need new structure requests
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getStructureChangeResponseList() {
        return java.util.Collections.unmodifiableList(structureChangeResponse_);
      }
      /**
       * <code>repeated uint32 structure_change_response = 8;</code>
       *
       * <pre>
       * node ID's which need new structure requests
       * </pre>
       */
      public int getStructureChangeResponseCount() {
        return structureChangeResponse_.size();
      }
      /**
       * <code>repeated uint32 structure_change_response = 8;</code>
       *
       * <pre>
       * node ID's which need new structure requests
       * </pre>
       */
      public int getStructureChangeResponse(int index) {
        return structureChangeResponse_.get(index);
      }
      /**
       * <code>repeated uint32 structure_change_response = 8;</code>
       *
       * <pre>
       * node ID's which need new structure requests
       * </pre>
       */
      public Builder setStructureChangeResponse(
          int index, int value) {
        ensureStructureChangeResponseIsMutable();
        structureChangeResponse_.set(index, value);

        return this;
      }
      /**
       * <code>repeated uint32 structure_change_response = 8;</code>
       *
       * <pre>
       * node ID's which need new structure requests
       * </pre>
       */
      public Builder addStructureChangeResponse(int value) {
        ensureStructureChangeResponseIsMutable();
        structureChangeResponse_.add(value);

        return this;
      }
      /**
       * <code>repeated uint32 structure_change_response = 8;</code>
       *
       * <pre>
       * node ID's which need new structure requests
       * </pre>
       */
      public Builder addAllStructureChangeResponse(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStructureChangeResponseIsMutable();
        super.addAll(values, structureChangeResponse_);

        return this;
      }
      /**
       * <code>repeated uint32 structure_change_response = 8;</code>
       *
       * <pre>
       * node ID's which need new structure requests
       * </pre>
       */
      public Builder clearStructureChangeResponse() {
        structureChangeResponse_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);

        return this;
      }

      // optional uint64 current_time_response = 9;
      private long currentTimeResponse_ ;
      /**
       * <code>optional uint64 current_time_response = 9;</code>
       */
      public boolean hasCurrentTimeResponse() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint64 current_time_response = 9;</code>
       */
      public long getCurrentTimeResponse() {
        return currentTimeResponse_;
      }
      /**
       * <code>optional uint64 current_time_response = 9;</code>
       */
      public Builder setCurrentTimeResponse(long value) {
        bitField0_ |= 0x00000100;
        currentTimeResponse_ = value;

        return this;
      }
      /**
       * <code>optional uint64 current_time_response = 9;</code>
       */
      public Builder clearCurrentTimeResponse() {
        bitField0_ = (bitField0_ & ~0x00000100);
        currentTimeResponse_ = 0L;

        return this;
      }

      // @@protoc_insertion_point(builder_scope:StudioAPI.Proto.Container)
    }

    static {
      defaultInstance = new Container(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:StudioAPI.Proto.Container)
  }

  public interface ErrorOrBuilder extends
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<Error> {

    // required uint32 code = 1;
    /**
     * <code>required uint32 code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required uint32 code = 1;</code>
     */
    int getCode();

    // optional string text = 2;
    /**
     * <code>optional string text = 2;</code>
     */
    boolean hasText();
    /**
     * <code>optional string text = 2;</code>
     */
    java.lang.String getText();
    /**
     * <code>optional string text = 2;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();
  }
  /**
   * Protobuf type {@code StudioAPI.Proto.Error}
   *
   * <pre>
   ** Error message type.
   * </pre>
   */
  public static final class Error extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        Error> implements ErrorOrBuilder {
    // Use Error.newBuilder() to construct.
    private Error(com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<StudioAPI.Error, ?> builder) {
      super(builder);

    }
    private Error(boolean noInit) {}

    private static final Error defaultInstance;
    public static Error getDefaultInstance() {
      return defaultInstance;
    }

    public Error getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Error(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              text_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Error> PARSER =
        new com.google.protobuf.AbstractParser<Error>() {
      public Error parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Error(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Error> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required uint32 code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    // optional string text = 2;
    public static final int TEXT_FIELD_NUMBER = 2;
    private java.lang.Object text_;
    /**
     * <code>optional string text = 2;</code>
     */
    public boolean hasText() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string text = 2;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string text = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      code_ = 0;
      text_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<StudioAPI.Error>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, code_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTextBytes());
      }
      extensionWriter.writeUntil(536870912, output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, code_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTextBytes());
      }
      size += extensionsSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StudioAPI.Error parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.Error parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.Error parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.Error parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.Error parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.Error parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StudioAPI.Error parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StudioAPI.Error parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StudioAPI.Error parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.Error parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StudioAPI.Error prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code StudioAPI.Proto.Error}
     *
     * <pre>
     ** Error message type.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          StudioAPI.Error, Builder> implements StudioAPI.ErrorOrBuilder {
      // Construct using StudioAPI.Error.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        text_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public StudioAPI.Error getDefaultInstanceForType() {
        return StudioAPI.Error.getDefaultInstance();
      }

      public StudioAPI.Error build() {
        StudioAPI.Error result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StudioAPI.Error buildPartial() {
        StudioAPI.Error result = new StudioAPI.Error(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.text_ = text_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(StudioAPI.Error other) {
        if (other == StudioAPI.Error.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (other.hasText()) {
          bitField0_ |= 0x00000002;
          text_ = other.text_;

        }
        this.mergeExtensionFields(other);
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {

          return false;
        }
        if (!extensionsAreInitialized()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StudioAPI.Error parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StudioAPI.Error) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 code = 1;
      private int code_ ;
      /**
       * <code>required uint32 code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required uint32 code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;

        return this;
      }
      /**
       * <code>required uint32 code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;

        return this;
      }

      // optional string text = 2;
      private java.lang.Object text_ = "";
      /**
       * <code>optional string text = 2;</code>
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string text = 2;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          text_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string text = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string text = 2;</code>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        text_ = value;

        return this;
      }
      /**
       * <code>optional string text = 2;</code>
       */
      public Builder clearText() {
        bitField0_ = (bitField0_ & ~0x00000002);
        text_ = getDefaultInstance().getText();

        return this;
      }
      /**
       * <code>optional string text = 2;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        text_ = value;

        return this;
      }

      // @@protoc_insertion_point(builder_scope:StudioAPI.Proto.Error)
    }

    static {
      defaultInstance = new Error(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:StudioAPI.Proto.Error)
  }

  public interface InfoOrBuilder extends
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<Info> {

    // required uint32 node_id = 1;
    /**
     * <code>required uint32 node_id = 1;</code>
     *
     * <pre>
     * Application wide unique ID for each instance in CDP structure
     * </pre>
     */
    boolean hasNodeId();
    /**
     * <code>required uint32 node_id = 1;</code>
     *
     * <pre>
     * Application wide unique ID for each instance in CDP structure
     * </pre>
     */
    int getNodeId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * Local short name
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * Local short name
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * Local short name
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required .StudioAPI.Proto.CDPNodeType node_type = 3;
    /**
     * <code>required .StudioAPI.Proto.CDPNodeType node_type = 3;</code>
     *
     * <pre>
     * Direct base type, type of the class
     * </pre>
     */
    boolean hasNodeType();
    /**
     * <code>required .StudioAPI.Proto.CDPNodeType node_type = 3;</code>
     *
     * <pre>
     * Direct base type, type of the class
     * </pre>
     */
    StudioAPI.CDPNodeType getNodeType();

    // optional .StudioAPI.Proto.CDPValueType value_type = 4;
    /**
     * <code>optional .StudioAPI.Proto.CDPValueType value_type = 4;</code>
     *
     * <pre>
     * Value primitive type the node holds if node may hold a value
     * </pre>
     */
    boolean hasValueType();
    /**
     * <code>optional .StudioAPI.Proto.CDPValueType value_type = 4;</code>
     *
     * <pre>
     * Value primitive type the node holds if node may hold a value
     * </pre>
     */
    StudioAPI.CDPValueType getValueType();

    // optional string type_name = 5;
    /**
     * <code>optional string type_name = 5;</code>
     *
     * <pre>
     * Real class name
     * </pre>
     */
    boolean hasTypeName();
    /**
     * <code>optional string type_name = 5;</code>
     *
     * <pre>
     * Real class name
     * </pre>
     */
    java.lang.String getTypeName();
    /**
     * <code>optional string type_name = 5;</code>
     *
     * <pre>
     * Real class name
     * </pre>
     */
    com.google.protobuf.ByteString
        getTypeNameBytes();

    // optional string server_addr = 6;
    /**
     * <code>optional string server_addr = 6;</code>
     *
     * <pre>
     * If this node signifies another CDP application,
     * </pre>
     */
    boolean hasServerAddr();
    /**
     * <code>optional string server_addr = 6;</code>
     *
     * <pre>
     * If this node signifies another CDP application,
     * </pre>
     */
    java.lang.String getServerAddr();
    /**
     * <code>optional string server_addr = 6;</code>
     *
     * <pre>
     * If this node signifies another CDP application,
     * </pre>
     */
    com.google.protobuf.ByteString
        getServerAddrBytes();

    // optional uint32 server_port = 7;
    /**
     * <code>optional uint32 server_port = 7;</code>
     *
     * <pre>
     * this field will be the IP of said application's StudioAPIServer
     * </pre>
     */
    boolean hasServerPort();
    /**
     * <code>optional uint32 server_port = 7;</code>
     *
     * <pre>
     * this field will be the IP of said application's StudioAPIServer
     * </pre>
     */
    int getServerPort();

    // optional bool is_local = 8;
    /**
     * <code>optional bool is_local = 8;</code>
     *
     * <pre>
     * if multiple applications are sent back from the server,
     * </pre>
     */
    boolean hasIsLocal();
    /**
     * <code>optional bool is_local = 8;</code>
     *
     * <pre>
     * if multiple applications are sent back from the server,
     * </pre>
     */
    boolean getIsLocal();

    // optional uint32 flags = 9;
    /**
     * <code>optional uint32 flags = 9;</code>
     *
     * <pre>
     * this flag is set to true for the app that the data was requested from
     * </pre>
     */
    boolean hasFlags();
    /**
     * <code>optional uint32 flags = 9;</code>
     *
     * <pre>
     * this flag is set to true for the app that the data was requested from
     * </pre>
     */
    int getFlags();
  }
  /**
   * Protobuf type {@code StudioAPI.Proto.Info}
   *
   * <pre>
   ** A single CDPNode property container.
   * </pre>
   */
  public static final class Info extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        Info> implements InfoOrBuilder {
    // Use Info.newBuilder() to construct.
    private Info(com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<StudioAPI.Info, ?> builder) {
      super(builder);

    }
    private Info(boolean noInit) {}

    private static final Info defaultInstance;
    public static Info getDefaultInstance() {
      return defaultInstance;
    }

    public Info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              nodeId_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              StudioAPI.CDPNodeType value = StudioAPI.CDPNodeType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000004;
                nodeType_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              StudioAPI.CDPValueType value = StudioAPI.CDPValueType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000008;
                valueType_ = value;
              }
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              typeName_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              serverAddr_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              serverPort_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              isLocal_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              flags_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Info> PARSER =
        new com.google.protobuf.AbstractParser<Info>() {
      public Info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Info> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code StudioAPI.Proto.Info.Flags}
     */
    public enum Flags
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>eNone = 0;</code>
       */
      eNone(0, 0),
      /**
       * <code>eNodeIsLeaf = 1;</code>
       */
      eNodeIsLeaf(1, 1),
      /**
       * <code>eValueIsPersistent = 2;</code>
       */
      eValueIsPersistent(2, 2),
      /**
       * <code>eValueIsReadOnly = 4;</code>
       */
      eValueIsReadOnly(3, 4),
      /**
       * <code>eNodeIsRemovable = 8;</code>
       */
      eNodeIsRemovable(4, 8),
      /**
       * <code>eNodeCanAddChildren = 16;</code>
       */
      eNodeCanAddChildren(5, 16),
      /**
       * <code>eNodeIsRenamable = 32;</code>
       */
      eNodeIsRenamable(6, 32),
      /**
       * <code>eNodeIsInternal = 64;</code>
       */
      eNodeIsInternal(7, 64),
      /**
       * <code>eNodeIsImportant = 128;</code>
       */
      eNodeIsImportant(8, 128),
      ;

      /**
       * <code>eNone = 0;</code>
       */
      public static final int eNone_VALUE = 0;
      /**
       * <code>eNodeIsLeaf = 1;</code>
       */
      public static final int eNodeIsLeaf_VALUE = 1;
      /**
       * <code>eValueIsPersistent = 2;</code>
       */
      public static final int eValueIsPersistent_VALUE = 2;
      /**
       * <code>eValueIsReadOnly = 4;</code>
       */
      public static final int eValueIsReadOnly_VALUE = 4;
      /**
       * <code>eNodeIsRemovable = 8;</code>
       */
      public static final int eNodeIsRemovable_VALUE = 8;
      /**
       * <code>eNodeCanAddChildren = 16;</code>
       */
      public static final int eNodeCanAddChildren_VALUE = 16;
      /**
       * <code>eNodeIsRenamable = 32;</code>
       */
      public static final int eNodeIsRenamable_VALUE = 32;
      /**
       * <code>eNodeIsInternal = 64;</code>
       */
      public static final int eNodeIsInternal_VALUE = 64;
      /**
       * <code>eNodeIsImportant = 128;</code>
       */
      public static final int eNodeIsImportant_VALUE = 128;


      public final int getNumber() { return value; }

      public static Flags valueOf(int value) {
        switch (value) {
          case 0: return eNone;
          case 1: return eNodeIsLeaf;
          case 2: return eValueIsPersistent;
          case 4: return eValueIsReadOnly;
          case 8: return eNodeIsRemovable;
          case 16: return eNodeCanAddChildren;
          case 32: return eNodeIsRenamable;
          case 64: return eNodeIsInternal;
          case 128: return eNodeIsImportant;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Flags>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Flags>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Flags>() {
              public Flags findValueByNumber(int number) {
                return Flags.valueOf(number);
              }
            };

      private final int value;

      private Flags(int index, int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:StudioAPI.Proto.Info.Flags)
    }

    private int bitField0_;
    // required uint32 node_id = 1;
    public static final int NODE_ID_FIELD_NUMBER = 1;
    private int nodeId_;
    /**
     * <code>required uint32 node_id = 1;</code>
     *
     * <pre>
     * Application wide unique ID for each instance in CDP structure
     * </pre>
     */
    public boolean hasNodeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 node_id = 1;</code>
     *
     * <pre>
     * Application wide unique ID for each instance in CDP structure
     * </pre>
     */
    public int getNodeId() {
      return nodeId_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * Local short name
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * Local short name
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * Local short name
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .StudioAPI.Proto.CDPNodeType node_type = 3;
    public static final int NODE_TYPE_FIELD_NUMBER = 3;
    private StudioAPI.CDPNodeType nodeType_;
    /**
     * <code>required .StudioAPI.Proto.CDPNodeType node_type = 3;</code>
     *
     * <pre>
     * Direct base type, type of the class
     * </pre>
     */
    public boolean hasNodeType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .StudioAPI.Proto.CDPNodeType node_type = 3;</code>
     *
     * <pre>
     * Direct base type, type of the class
     * </pre>
     */
    public StudioAPI.CDPNodeType getNodeType() {
      return nodeType_;
    }

    // optional .StudioAPI.Proto.CDPValueType value_type = 4;
    public static final int VALUE_TYPE_FIELD_NUMBER = 4;
    private StudioAPI.CDPValueType valueType_;
    /**
     * <code>optional .StudioAPI.Proto.CDPValueType value_type = 4;</code>
     *
     * <pre>
     * Value primitive type the node holds if node may hold a value
     * </pre>
     */
    public boolean hasValueType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .StudioAPI.Proto.CDPValueType value_type = 4;</code>
     *
     * <pre>
     * Value primitive type the node holds if node may hold a value
     * </pre>
     */
    public StudioAPI.CDPValueType getValueType() {
      return valueType_;
    }

    // optional string type_name = 5;
    public static final int TYPE_NAME_FIELD_NUMBER = 5;
    private java.lang.Object typeName_;
    /**
     * <code>optional string type_name = 5;</code>
     *
     * <pre>
     * Real class name
     * </pre>
     */
    public boolean hasTypeName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string type_name = 5;</code>
     *
     * <pre>
     * Real class name
     * </pre>
     */
    public java.lang.String getTypeName() {
      java.lang.Object ref = typeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          typeName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string type_name = 5;</code>
     *
     * <pre>
     * Real class name
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTypeNameBytes() {
      java.lang.Object ref = typeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string server_addr = 6;
    public static final int SERVER_ADDR_FIELD_NUMBER = 6;
    private java.lang.Object serverAddr_;
    /**
     * <code>optional string server_addr = 6;</code>
     *
     * <pre>
     * If this node signifies another CDP application,
     * </pre>
     */
    public boolean hasServerAddr() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string server_addr = 6;</code>
     *
     * <pre>
     * If this node signifies another CDP application,
     * </pre>
     */
    public java.lang.String getServerAddr() {
      java.lang.Object ref = serverAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serverAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string server_addr = 6;</code>
     *
     * <pre>
     * If this node signifies another CDP application,
     * </pre>
     */
    public com.google.protobuf.ByteString
        getServerAddrBytes() {
      java.lang.Object ref = serverAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serverAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 server_port = 7;
    public static final int SERVER_PORT_FIELD_NUMBER = 7;
    private int serverPort_;
    /**
     * <code>optional uint32 server_port = 7;</code>
     *
     * <pre>
     * this field will be the IP of said application's StudioAPIServer
     * </pre>
     */
    public boolean hasServerPort() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 server_port = 7;</code>
     *
     * <pre>
     * this field will be the IP of said application's StudioAPIServer
     * </pre>
     */
    public int getServerPort() {
      return serverPort_;
    }

    // optional bool is_local = 8;
    public static final int IS_LOCAL_FIELD_NUMBER = 8;
    private boolean isLocal_;
    /**
     * <code>optional bool is_local = 8;</code>
     *
     * <pre>
     * if multiple applications are sent back from the server,
     * </pre>
     */
    public boolean hasIsLocal() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool is_local = 8;</code>
     *
     * <pre>
     * if multiple applications are sent back from the server,
     * </pre>
     */
    public boolean getIsLocal() {
      return isLocal_;
    }

    // optional uint32 flags = 9;
    public static final int FLAGS_FIELD_NUMBER = 9;
    private int flags_;
    /**
     * <code>optional uint32 flags = 9;</code>
     *
     * <pre>
     * this flag is set to true for the app that the data was requested from
     * </pre>
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 flags = 9;</code>
     *
     * <pre>
     * this flag is set to true for the app that the data was requested from
     * </pre>
     */
    public int getFlags() {
      return flags_;
    }

    private void initFields() {
      nodeId_ = 0;
      name_ = "";
      nodeType_ = StudioAPI.CDPNodeType.CDP_UNDEFINED;
      valueType_ = StudioAPI.CDPValueType.eUNDEFINED;
      typeName_ = "";
      serverAddr_ = "";
      serverPort_ = 0;
      isLocal_ = false;
      flags_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasNodeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNodeType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<StudioAPI.Info>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, nodeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, nodeType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, valueType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getTypeNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getServerAddrBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, serverPort_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, isLocal_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, flags_);
      }
      extensionWriter.writeUntil(536870912, output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, nodeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, nodeType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, valueType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getTypeNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getServerAddrBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, serverPort_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isLocal_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, flags_);
      }
      size += extensionsSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StudioAPI.Info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.Info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.Info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.Info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.Info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.Info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StudioAPI.Info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StudioAPI.Info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StudioAPI.Info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.Info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StudioAPI.Info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code StudioAPI.Proto.Info}
     *
     * <pre>
     ** A single CDPNode property container.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          StudioAPI.Info, Builder> implements StudioAPI.InfoOrBuilder {
      // Construct using StudioAPI.Info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        nodeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        nodeType_ = StudioAPI.CDPNodeType.CDP_UNDEFINED;
        bitField0_ = (bitField0_ & ~0x00000004);
        valueType_ = StudioAPI.CDPValueType.eUNDEFINED;
        bitField0_ = (bitField0_ & ~0x00000008);
        typeName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        serverAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        serverPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        isLocal_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        flags_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public StudioAPI.Info getDefaultInstanceForType() {
        return StudioAPI.Info.getDefaultInstance();
      }

      public StudioAPI.Info build() {
        StudioAPI.Info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StudioAPI.Info buildPartial() {
        StudioAPI.Info result = new StudioAPI.Info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nodeId_ = nodeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.nodeType_ = nodeType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.valueType_ = valueType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.typeName_ = typeName_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.serverAddr_ = serverAddr_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.serverPort_ = serverPort_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isLocal_ = isLocal_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.flags_ = flags_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(StudioAPI.Info other) {
        if (other == StudioAPI.Info.getDefaultInstance()) return this;
        if (other.hasNodeId()) {
          setNodeId(other.getNodeId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;

        }
        if (other.hasNodeType()) {
          setNodeType(other.getNodeType());
        }
        if (other.hasValueType()) {
          setValueType(other.getValueType());
        }
        if (other.hasTypeName()) {
          bitField0_ |= 0x00000010;
          typeName_ = other.typeName_;

        }
        if (other.hasServerAddr()) {
          bitField0_ |= 0x00000020;
          serverAddr_ = other.serverAddr_;

        }
        if (other.hasServerPort()) {
          setServerPort(other.getServerPort());
        }
        if (other.hasIsLocal()) {
          setIsLocal(other.getIsLocal());
        }
        if (other.hasFlags()) {
          setFlags(other.getFlags());
        }
        this.mergeExtensionFields(other);
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNodeId()) {

          return false;
        }
        if (!hasName()) {

          return false;
        }
        if (!hasNodeType()) {

          return false;
        }
        if (!extensionsAreInitialized()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StudioAPI.Info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StudioAPI.Info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 node_id = 1;
      private int nodeId_ ;
      /**
       * <code>required uint32 node_id = 1;</code>
       *
       * <pre>
       * Application wide unique ID for each instance in CDP structure
       * </pre>
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 node_id = 1;</code>
       *
       * <pre>
       * Application wide unique ID for each instance in CDP structure
       * </pre>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>required uint32 node_id = 1;</code>
       *
       * <pre>
       * Application wide unique ID for each instance in CDP structure
       * </pre>
       */
      public Builder setNodeId(int value) {
        bitField0_ |= 0x00000001;
        nodeId_ = value;

        return this;
      }
      /**
       * <code>required uint32 node_id = 1;</code>
       *
       * <pre>
       * Application wide unique ID for each instance in CDP structure
       * </pre>
       */
      public Builder clearNodeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nodeId_ = 0;

        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * Local short name
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * Local short name
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * Local short name
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * Local short name
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;

        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * Local short name
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();

        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * Local short name
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;

        return this;
      }

      // required .StudioAPI.Proto.CDPNodeType node_type = 3;
      private StudioAPI.CDPNodeType nodeType_ = StudioAPI.CDPNodeType.CDP_UNDEFINED;
      /**
       * <code>required .StudioAPI.Proto.CDPNodeType node_type = 3;</code>
       *
       * <pre>
       * Direct base type, type of the class
       * </pre>
       */
      public boolean hasNodeType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .StudioAPI.Proto.CDPNodeType node_type = 3;</code>
       *
       * <pre>
       * Direct base type, type of the class
       * </pre>
       */
      public StudioAPI.CDPNodeType getNodeType() {
        return nodeType_;
      }
      /**
       * <code>required .StudioAPI.Proto.CDPNodeType node_type = 3;</code>
       *
       * <pre>
       * Direct base type, type of the class
       * </pre>
       */
      public Builder setNodeType(StudioAPI.CDPNodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        nodeType_ = value;

        return this;
      }
      /**
       * <code>required .StudioAPI.Proto.CDPNodeType node_type = 3;</code>
       *
       * <pre>
       * Direct base type, type of the class
       * </pre>
       */
      public Builder clearNodeType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        nodeType_ = StudioAPI.CDPNodeType.CDP_UNDEFINED;

        return this;
      }

      // optional .StudioAPI.Proto.CDPValueType value_type = 4;
      private StudioAPI.CDPValueType valueType_ = StudioAPI.CDPValueType.eUNDEFINED;
      /**
       * <code>optional .StudioAPI.Proto.CDPValueType value_type = 4;</code>
       *
       * <pre>
       * Value primitive type the node holds if node may hold a value
       * </pre>
       */
      public boolean hasValueType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .StudioAPI.Proto.CDPValueType value_type = 4;</code>
       *
       * <pre>
       * Value primitive type the node holds if node may hold a value
       * </pre>
       */
      public StudioAPI.CDPValueType getValueType() {
        return valueType_;
      }
      /**
       * <code>optional .StudioAPI.Proto.CDPValueType value_type = 4;</code>
       *
       * <pre>
       * Value primitive type the node holds if node may hold a value
       * </pre>
       */
      public Builder setValueType(StudioAPI.CDPValueType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        valueType_ = value;

        return this;
      }
      /**
       * <code>optional .StudioAPI.Proto.CDPValueType value_type = 4;</code>
       *
       * <pre>
       * Value primitive type the node holds if node may hold a value
       * </pre>
       */
      public Builder clearValueType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        valueType_ = StudioAPI.CDPValueType.eUNDEFINED;

        return this;
      }

      // optional string type_name = 5;
      private java.lang.Object typeName_ = "";
      /**
       * <code>optional string type_name = 5;</code>
       *
       * <pre>
       * Real class name
       * </pre>
       */
      public boolean hasTypeName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string type_name = 5;</code>
       *
       * <pre>
       * Real class name
       * </pre>
       */
      public java.lang.String getTypeName() {
        java.lang.Object ref = typeName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          typeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string type_name = 5;</code>
       *
       * <pre>
       * Real class name
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTypeNameBytes() {
        java.lang.Object ref = typeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          typeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string type_name = 5;</code>
       *
       * <pre>
       * Real class name
       * </pre>
       */
      public Builder setTypeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        typeName_ = value;

        return this;
      }
      /**
       * <code>optional string type_name = 5;</code>
       *
       * <pre>
       * Real class name
       * </pre>
       */
      public Builder clearTypeName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        typeName_ = getDefaultInstance().getTypeName();

        return this;
      }
      /**
       * <code>optional string type_name = 5;</code>
       *
       * <pre>
       * Real class name
       * </pre>
       */
      public Builder setTypeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        typeName_ = value;

        return this;
      }

      // optional string server_addr = 6;
      private java.lang.Object serverAddr_ = "";
      /**
       * <code>optional string server_addr = 6;</code>
       *
       * <pre>
       * If this node signifies another CDP application,
       * </pre>
       */
      public boolean hasServerAddr() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string server_addr = 6;</code>
       *
       * <pre>
       * If this node signifies another CDP application,
       * </pre>
       */
      public java.lang.String getServerAddr() {
        java.lang.Object ref = serverAddr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          serverAddr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string server_addr = 6;</code>
       *
       * <pre>
       * If this node signifies another CDP application,
       * </pre>
       */
      public com.google.protobuf.ByteString
          getServerAddrBytes() {
        java.lang.Object ref = serverAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serverAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string server_addr = 6;</code>
       *
       * <pre>
       * If this node signifies another CDP application,
       * </pre>
       */
      public Builder setServerAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        serverAddr_ = value;

        return this;
      }
      /**
       * <code>optional string server_addr = 6;</code>
       *
       * <pre>
       * If this node signifies another CDP application,
       * </pre>
       */
      public Builder clearServerAddr() {
        bitField0_ = (bitField0_ & ~0x00000020);
        serverAddr_ = getDefaultInstance().getServerAddr();

        return this;
      }
      /**
       * <code>optional string server_addr = 6;</code>
       *
       * <pre>
       * If this node signifies another CDP application,
       * </pre>
       */
      public Builder setServerAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        serverAddr_ = value;

        return this;
      }

      // optional uint32 server_port = 7;
      private int serverPort_ ;
      /**
       * <code>optional uint32 server_port = 7;</code>
       *
       * <pre>
       * this field will be the IP of said application's StudioAPIServer
       * </pre>
       */
      public boolean hasServerPort() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 server_port = 7;</code>
       *
       * <pre>
       * this field will be the IP of said application's StudioAPIServer
       * </pre>
       */
      public int getServerPort() {
        return serverPort_;
      }
      /**
       * <code>optional uint32 server_port = 7;</code>
       *
       * <pre>
       * this field will be the IP of said application's StudioAPIServer
       * </pre>
       */
      public Builder setServerPort(int value) {
        bitField0_ |= 0x00000040;
        serverPort_ = value;

        return this;
      }
      /**
       * <code>optional uint32 server_port = 7;</code>
       *
       * <pre>
       * this field will be the IP of said application's StudioAPIServer
       * </pre>
       */
      public Builder clearServerPort() {
        bitField0_ = (bitField0_ & ~0x00000040);
        serverPort_ = 0;

        return this;
      }

      // optional bool is_local = 8;
      private boolean isLocal_ ;
      /**
       * <code>optional bool is_local = 8;</code>
       *
       * <pre>
       * if multiple applications are sent back from the server,
       * </pre>
       */
      public boolean hasIsLocal() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool is_local = 8;</code>
       *
       * <pre>
       * if multiple applications are sent back from the server,
       * </pre>
       */
      public boolean getIsLocal() {
        return isLocal_;
      }
      /**
       * <code>optional bool is_local = 8;</code>
       *
       * <pre>
       * if multiple applications are sent back from the server,
       * </pre>
       */
      public Builder setIsLocal(boolean value) {
        bitField0_ |= 0x00000080;
        isLocal_ = value;

        return this;
      }
      /**
       * <code>optional bool is_local = 8;</code>
       *
       * <pre>
       * if multiple applications are sent back from the server,
       * </pre>
       */
      public Builder clearIsLocal() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isLocal_ = false;

        return this;
      }

      // optional uint32 flags = 9;
      private int flags_ ;
      /**
       * <code>optional uint32 flags = 9;</code>
       *
       * <pre>
       * this flag is set to true for the app that the data was requested from
       * </pre>
       */
      public boolean hasFlags() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 flags = 9;</code>
       *
       * <pre>
       * this flag is set to true for the app that the data was requested from
       * </pre>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <code>optional uint32 flags = 9;</code>
       *
       * <pre>
       * this flag is set to true for the app that the data was requested from
       * </pre>
       */
      public Builder setFlags(int value) {
        bitField0_ |= 0x00000100;
        flags_ = value;

        return this;
      }
      /**
       * <code>optional uint32 flags = 9;</code>
       *
       * <pre>
       * this flag is set to true for the app that the data was requested from
       * </pre>
       */
      public Builder clearFlags() {
        bitField0_ = (bitField0_ & ~0x00000100);
        flags_ = 0;

        return this;
      }

      // @@protoc_insertion_point(builder_scope:StudioAPI.Proto.Info)
    }

    static {
      defaultInstance = new Info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:StudioAPI.Proto.Info)
  }

  public interface NodeOrBuilder extends
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<Node> {

    // required .StudioAPI.Proto.Info info = 1;
    /**
     * <code>required .StudioAPI.Proto.Info info = 1;</code>
     */
    boolean hasInfo();
    /**
     * <code>required .StudioAPI.Proto.Info info = 1;</code>
     */
    StudioAPI.Info getInfo();

    // repeated .StudioAPI.Proto.Node node = 2;
    /**
     * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
     */
    java.util.List<StudioAPI.Node>
        getNodeList();
    /**
     * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
     */
    StudioAPI.Node getNode(int index);
    /**
     * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
     */
    int getNodeCount();
  }
  /**
   * Protobuf type {@code StudioAPI.Proto.Node}
   *
   * <pre>
   ** CDP structure response data structure, a tree of Info properties.
   * </pre>
   */
  public static final class Node extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        Node> implements NodeOrBuilder {
    // Use Node.newBuilder() to construct.
    private Node(com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<StudioAPI.Node, ?> builder) {
      super(builder);

    }
    private Node(boolean noInit) {}

    private static final Node defaultInstance;
    public static Node getDefaultInstance() {
      return defaultInstance;
    }

    public Node getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Node(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              StudioAPI.Info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = info_.toBuilder();
              }
              info_ = input.readMessage(StudioAPI.Info.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(info_);
                info_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                node_ = new java.util.ArrayList<StudioAPI.Node>();
                mutable_bitField0_ |= 0x00000002;
              }
              node_.add(input.readMessage(StudioAPI.Node.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          node_ = java.util.Collections.unmodifiableList(node_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Node> PARSER =
        new com.google.protobuf.AbstractParser<Node>() {
      public Node parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Node(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Node> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .StudioAPI.Proto.Info info = 1;
    public static final int INFO_FIELD_NUMBER = 1;
    private StudioAPI.Info info_;
    /**
     * <code>required .StudioAPI.Proto.Info info = 1;</code>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .StudioAPI.Proto.Info info = 1;</code>
     */
    public StudioAPI.Info getInfo() {
      return info_;
    }

    // repeated .StudioAPI.Proto.Node node = 2;
    public static final int NODE_FIELD_NUMBER = 2;
    private java.util.List<StudioAPI.Node> node_;
    /**
     * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
     */
    public java.util.List<StudioAPI.Node> getNodeList() {
      return node_;
    }
    /**
     * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
     */
    public java.util.List<? extends StudioAPI.NodeOrBuilder>
        getNodeOrBuilderList() {
      return node_;
    }
    /**
     * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
     */
    public int getNodeCount() {
      return node_.size();
    }
    /**
     * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
     */
    public StudioAPI.Node getNode(int index) {
      return node_.get(index);
    }
    /**
     * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
     */
    public StudioAPI.NodeOrBuilder getNodeOrBuilder(
        int index) {
      return node_.get(index);
    }

    private void initFields() {
      info_ = StudioAPI.Info.getDefaultInstance();
      node_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getNodeCount(); i++) {
        if (!getNode(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<StudioAPI.Node>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, info_);
      }
      for (int i = 0; i < node_.size(); i++) {
        output.writeMessage(2, node_.get(i));
      }
      extensionWriter.writeUntil(536870912, output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, info_);
      }
      for (int i = 0; i < node_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, node_.get(i));
      }
      size += extensionsSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StudioAPI.Node parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.Node parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.Node parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.Node parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.Node parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.Node parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StudioAPI.Node parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StudioAPI.Node parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StudioAPI.Node parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.Node parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StudioAPI.Node prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code StudioAPI.Proto.Node}
     *
     * <pre>
     ** CDP structure response data structure, a tree of Info properties.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          StudioAPI.Node, Builder> implements StudioAPI.NodeOrBuilder {
      // Construct using StudioAPI.Node.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        info_ = StudioAPI.Info.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        node_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public StudioAPI.Node getDefaultInstanceForType() {
        return StudioAPI.Node.getDefaultInstance();
      }

      public StudioAPI.Node build() {
        StudioAPI.Node result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StudioAPI.Node buildPartial() {
        StudioAPI.Node result = new StudioAPI.Node(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.info_ = info_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          node_ = java.util.Collections.unmodifiableList(node_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.node_ = node_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(StudioAPI.Node other) {
        if (other == StudioAPI.Node.getDefaultInstance()) return this;
        if (other.hasInfo()) {
          mergeInfo(other.getInfo());
        }
        if (!other.node_.isEmpty()) {
          if (node_.isEmpty()) {
            node_ = other.node_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNodeIsMutable();
            node_.addAll(other.node_);
          }

        }
        this.mergeExtensionFields(other);
        return this;
      }

      public final boolean isInitialized() {
        if (!hasInfo()) {

          return false;
        }
        if (!getInfo().isInitialized()) {

          return false;
        }
        for (int i = 0; i < getNodeCount(); i++) {
          if (!getNode(i).isInitialized()) {

            return false;
          }
        }
        if (!extensionsAreInitialized()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StudioAPI.Node parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StudioAPI.Node) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .StudioAPI.Proto.Info info = 1;
      private StudioAPI.Info info_ = StudioAPI.Info.getDefaultInstance();
      /**
       * <code>required .StudioAPI.Proto.Info info = 1;</code>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .StudioAPI.Proto.Info info = 1;</code>
       */
      public StudioAPI.Info getInfo() {
        return info_;
      }
      /**
       * <code>required .StudioAPI.Proto.Info info = 1;</code>
       */
      public Builder setInfo(StudioAPI.Info value) {
        if (value == null) {
          throw new NullPointerException();
        }
        info_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .StudioAPI.Proto.Info info = 1;</code>
       */
      public Builder setInfo(
          StudioAPI.Info.Builder builderForValue) {
        info_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .StudioAPI.Proto.Info info = 1;</code>
       */
      public Builder mergeInfo(StudioAPI.Info value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            info_ != StudioAPI.Info.getDefaultInstance()) {
          info_ =
            StudioAPI.Info.newBuilder(info_).mergeFrom(value).buildPartial();
        } else {
          info_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .StudioAPI.Proto.Info info = 1;</code>
       */
      public Builder clearInfo() {
        info_ = StudioAPI.Info.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // repeated .StudioAPI.Proto.Node node = 2;
      private java.util.List<StudioAPI.Node> node_ =
        java.util.Collections.emptyList();
      private void ensureNodeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          node_ = new java.util.ArrayList<StudioAPI.Node>(node_);
          bitField0_ |= 0x00000002;
         }
      }

      /**
       * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
       */
      public java.util.List<StudioAPI.Node> getNodeList() {
        return java.util.Collections.unmodifiableList(node_);
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
       */
      public int getNodeCount() {
        return node_.size();
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
       */
      public StudioAPI.Node getNode(int index) {
        return node_.get(index);
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
       */
      public Builder setNode(
          int index, StudioAPI.Node value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeIsMutable();
        node_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
       */
      public Builder setNode(
          int index, StudioAPI.Node.Builder builderForValue) {
        ensureNodeIsMutable();
        node_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
       */
      public Builder addNode(StudioAPI.Node value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeIsMutable();
        node_.add(value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
       */
      public Builder addNode(
          int index, StudioAPI.Node value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeIsMutable();
        node_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
       */
      public Builder addNode(
          StudioAPI.Node.Builder builderForValue) {
        ensureNodeIsMutable();
        node_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
       */
      public Builder addNode(
          int index, StudioAPI.Node.Builder builderForValue) {
        ensureNodeIsMutable();
        node_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
       */
      public Builder addAllNode(
          java.lang.Iterable<? extends StudioAPI.Node> values) {
        ensureNodeIsMutable();
        super.addAll(values, node_);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
       */
      public Builder clearNode() {
        node_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);

        return this;
      }
      /**
       * <code>repeated .StudioAPI.Proto.Node node = 2;</code>
       */
      public Builder removeNode(int index) {
        ensureNodeIsMutable();
        node_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:StudioAPI.Proto.Node)
    }

    static {
      defaultInstance = new Node(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:StudioAPI.Proto.Node)
  }

  public interface VariantValueOrBuilder extends
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<VariantValue> {

    // optional uint32 node_id = 1;
    /**
     * <code>optional uint32 node_id = 1;</code>
     */
    boolean hasNodeId();
    /**
     * <code>optional uint32 node_id = 1;</code>
     */
    int getNodeId();

    // optional double d_value = 2;
    /**
     * <code>optional double d_value = 2;</code>
     */
    boolean hasDValue();
    /**
     * <code>optional double d_value = 2;</code>
     */
    double getDValue();

    // optional float f_value = 3;
    /**
     * <code>optional float f_value = 3;</code>
     */
    boolean hasFValue();
    /**
     * <code>optional float f_value = 3;</code>
     */
    float getFValue();

    // optional uint64 ui64_value = 4;
    /**
     * <code>optional uint64 ui64_value = 4;</code>
     */
    boolean hasUi64Value();
    /**
     * <code>optional uint64 ui64_value = 4;</code>
     */
    long getUi64Value();

    // optional sint64 i64_value = 5;
    /**
     * <code>optional sint64 i64_value = 5;</code>
     */
    boolean hasI64Value();
    /**
     * <code>optional sint64 i64_value = 5;</code>
     */
    long getI64Value();

    // optional uint32 ui_value = 6;
    /**
     * <code>optional uint32 ui_value = 6;</code>
     */
    boolean hasUiValue();
    /**
     * <code>optional uint32 ui_value = 6;</code>
     */
    int getUiValue();

    // optional sint32 i_value = 7;
    /**
     * <code>optional sint32 i_value = 7;</code>
     */
    boolean hasIValue();
    /**
     * <code>optional sint32 i_value = 7;</code>
     */
    int getIValue();

    // optional uint32 us_value = 8;
    /**
     * <code>optional uint32 us_value = 8;</code>
     *
     * <pre>
     * uint used as ushort (which protobuf doesnt have)
     * </pre>
     */
    boolean hasUsValue();
    /**
     * <code>optional uint32 us_value = 8;</code>
     *
     * <pre>
     * uint used as ushort (which protobuf doesnt have)
     * </pre>
     */
    int getUsValue();

    // optional sint32 s_value = 9;
    /**
     * <code>optional sint32 s_value = 9;</code>
     *
     * <pre>
     * int used as short
     * </pre>
     */
    boolean hasSValue();
    /**
     * <code>optional sint32 s_value = 9;</code>
     *
     * <pre>
     * int used as short
     * </pre>
     */
    int getSValue();

    // optional uint32 uc_value = 10;
    /**
     * <code>optional uint32 uc_value = 10;</code>
     *
     * <pre>
     * uint used as uchar
     * </pre>
     */
    boolean hasUcValue();
    /**
     * <code>optional uint32 uc_value = 10;</code>
     *
     * <pre>
     * uint used as uchar
     * </pre>
     */
    int getUcValue();

    // optional sint32 c_value = 11;
    /**
     * <code>optional sint32 c_value = 11;</code>
     *
     * <pre>
     * int used as char
     * </pre>
     */
    boolean hasCValue();
    /**
     * <code>optional sint32 c_value = 11;</code>
     *
     * <pre>
     * int used as char
     * </pre>
     */
    int getCValue();

    // optional bool b_value = 12;
    /**
     * <code>optional bool b_value = 12;</code>
     */
    boolean hasBValue();
    /**
     * <code>optional bool b_value = 12;</code>
     */
    boolean getBValue();

    // optional string str_value = 13;
    /**
     * <code>optional string str_value = 13;</code>
     */
    boolean hasStrValue();
    /**
     * <code>optional string str_value = 13;</code>
     */
    java.lang.String getStrValue();
    /**
     * <code>optional string str_value = 13;</code>
     */
    com.google.protobuf.ByteString
        getStrValueBytes();

    // optional uint64 timestamp = 14;
    /**
     * <code>optional uint64 timestamp = 14;</code>
     *
     * <pre>
     * Source may provide timestamp for sent value
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint64 timestamp = 14;</code>
     *
     * <pre>
     * Source may provide timestamp for sent value
     * </pre>
     */
    long getTimestamp();
  }
  /**
   * Protobuf type {@code StudioAPI.Proto.VariantValue}
   *
   * <pre>
   ** Common Variant value type for a remote node.
   * </pre>
   */
  public static final class VariantValue extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        VariantValue> implements VariantValueOrBuilder {
    // Use VariantValue.newBuilder() to construct.
    private VariantValue(com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<StudioAPI.VariantValue, ?> builder) {
      super(builder);

    }
    private VariantValue(boolean noInit) {}

    private static final VariantValue defaultInstance;
    public static VariantValue getDefaultInstance() {
      return defaultInstance;
    }

    public VariantValue getDefaultInstanceForType() {
      return defaultInstance;
    }

    private VariantValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              nodeId_ = input.readUInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              dValue_ = input.readDouble();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              fValue_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              ui64Value_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              i64Value_ = input.readSInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              uiValue_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              iValue_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              usValue_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              sValue_ = input.readSInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              ucValue_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              cValue_ = input.readSInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              bValue_ = input.readBool();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              strValue_ = input.readBytes();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              timestamp_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<VariantValue> PARSER =
        new com.google.protobuf.AbstractParser<VariantValue>() {
      public VariantValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VariantValue(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VariantValue> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 node_id = 1;
    public static final int NODE_ID_FIELD_NUMBER = 1;
    private int nodeId_;
    /**
     * <code>optional uint32 node_id = 1;</code>
     */
    public boolean hasNodeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 node_id = 1;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    // optional double d_value = 2;
    public static final int D_VALUE_FIELD_NUMBER = 2;
    private double dValue_;
    /**
     * <code>optional double d_value = 2;</code>
     */
    public boolean hasDValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional double d_value = 2;</code>
     */
    public double getDValue() {
      return dValue_;
    }

    // optional float f_value = 3;
    public static final int F_VALUE_FIELD_NUMBER = 3;
    private float fValue_;
    /**
     * <code>optional float f_value = 3;</code>
     */
    public boolean hasFValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float f_value = 3;</code>
     */
    public float getFValue() {
      return fValue_;
    }

    // optional uint64 ui64_value = 4;
    public static final int UI64_VALUE_FIELD_NUMBER = 4;
    private long ui64Value_;
    /**
     * <code>optional uint64 ui64_value = 4;</code>
     */
    public boolean hasUi64Value() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 ui64_value = 4;</code>
     */
    public long getUi64Value() {
      return ui64Value_;
    }

    // optional sint64 i64_value = 5;
    public static final int I64_VALUE_FIELD_NUMBER = 5;
    private long i64Value_;
    /**
     * <code>optional sint64 i64_value = 5;</code>
     */
    public boolean hasI64Value() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint64 i64_value = 5;</code>
     */
    public long getI64Value() {
      return i64Value_;
    }

    // optional uint32 ui_value = 6;
    public static final int UI_VALUE_FIELD_NUMBER = 6;
    private int uiValue_;
    /**
     * <code>optional uint32 ui_value = 6;</code>
     */
    public boolean hasUiValue() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 ui_value = 6;</code>
     */
    public int getUiValue() {
      return uiValue_;
    }

    // optional sint32 i_value = 7;
    public static final int I_VALUE_FIELD_NUMBER = 7;
    private int iValue_;
    /**
     * <code>optional sint32 i_value = 7;</code>
     */
    public boolean hasIValue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 i_value = 7;</code>
     */
    public int getIValue() {
      return iValue_;
    }

    // optional uint32 us_value = 8;
    public static final int US_VALUE_FIELD_NUMBER = 8;
    private int usValue_;
    /**
     * <code>optional uint32 us_value = 8;</code>
     *
     * <pre>
     * uint used as ushort (which protobuf doesnt have)
     * </pre>
     */
    public boolean hasUsValue() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 us_value = 8;</code>
     *
     * <pre>
     * uint used as ushort (which protobuf doesnt have)
     * </pre>
     */
    public int getUsValue() {
      return usValue_;
    }

    // optional sint32 s_value = 9;
    public static final int S_VALUE_FIELD_NUMBER = 9;
    private int sValue_;
    /**
     * <code>optional sint32 s_value = 9;</code>
     *
     * <pre>
     * int used as short
     * </pre>
     */
    public boolean hasSValue() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional sint32 s_value = 9;</code>
     *
     * <pre>
     * int used as short
     * </pre>
     */
    public int getSValue() {
      return sValue_;
    }

    // optional uint32 uc_value = 10;
    public static final int UC_VALUE_FIELD_NUMBER = 10;
    private int ucValue_;
    /**
     * <code>optional uint32 uc_value = 10;</code>
     *
     * <pre>
     * uint used as uchar
     * </pre>
     */
    public boolean hasUcValue() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 uc_value = 10;</code>
     *
     * <pre>
     * uint used as uchar
     * </pre>
     */
    public int getUcValue() {
      return ucValue_;
    }

    // optional sint32 c_value = 11;
    public static final int C_VALUE_FIELD_NUMBER = 11;
    private int cValue_;
    /**
     * <code>optional sint32 c_value = 11;</code>
     *
     * <pre>
     * int used as char
     * </pre>
     */
    public boolean hasCValue() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional sint32 c_value = 11;</code>
     *
     * <pre>
     * int used as char
     * </pre>
     */
    public int getCValue() {
      return cValue_;
    }

    // optional bool b_value = 12;
    public static final int B_VALUE_FIELD_NUMBER = 12;
    private boolean bValue_;
    /**
     * <code>optional bool b_value = 12;</code>
     */
    public boolean hasBValue() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool b_value = 12;</code>
     */
    public boolean getBValue() {
      return bValue_;
    }

    // optional string str_value = 13;
    public static final int STR_VALUE_FIELD_NUMBER = 13;
    private java.lang.Object strValue_;
    /**
     * <code>optional string str_value = 13;</code>
     */
    public boolean hasStrValue() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string str_value = 13;</code>
     */
    public java.lang.String getStrValue() {
      java.lang.Object ref = strValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          strValue_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string str_value = 13;</code>
     */
    public com.google.protobuf.ByteString
        getStrValueBytes() {
      java.lang.Object ref = strValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        strValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint64 timestamp = 14;
    public static final int TIMESTAMP_FIELD_NUMBER = 14;
    private long timestamp_;
    /**
     * <code>optional uint64 timestamp = 14;</code>
     *
     * <pre>
     * Source may provide timestamp for sent value
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint64 timestamp = 14;</code>
     *
     * <pre>
     * Source may provide timestamp for sent value
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    private void initFields() {
      nodeId_ = 0;
      dValue_ = 0D;
      fValue_ = 0F;
      ui64Value_ = 0L;
      i64Value_ = 0L;
      uiValue_ = 0;
      iValue_ = 0;
      usValue_ = 0;
      sValue_ = 0;
      ucValue_ = 0;
      cValue_ = 0;
      bValue_ = false;
      strValue_ = "";
      timestamp_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<StudioAPI.VariantValue>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, nodeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, dValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, fValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, ui64Value_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt64(5, i64Value_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, uiValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(7, iValue_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, usValue_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeSInt32(9, sValue_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, ucValue_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSInt32(11, cValue_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, bValue_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getStrValueBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt64(14, timestamp_);
      }
      extensionWriter.writeUntil(536870912, output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, nodeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, dValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, fValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, ui64Value_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(5, i64Value_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, uiValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, iValue_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, usValue_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(9, sValue_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, ucValue_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(11, cValue_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, bValue_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getStrValueBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(14, timestamp_);
      }
      size += extensionsSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StudioAPI.VariantValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.VariantValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.VariantValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.VariantValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.VariantValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.VariantValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StudioAPI.VariantValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StudioAPI.VariantValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StudioAPI.VariantValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.VariantValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StudioAPI.VariantValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code StudioAPI.Proto.VariantValue}
     *
     * <pre>
     ** Common Variant value type for a remote node.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          StudioAPI.VariantValue, Builder> implements StudioAPI.VariantValueOrBuilder {
      // Construct using StudioAPI.VariantValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        nodeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dValue_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        fValue_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        ui64Value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        i64Value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        uiValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        iValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        usValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        sValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        ucValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        cValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        bValue_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        strValue_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public StudioAPI.VariantValue getDefaultInstanceForType() {
        return StudioAPI.VariantValue.getDefaultInstance();
      }

      public StudioAPI.VariantValue build() {
        StudioAPI.VariantValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StudioAPI.VariantValue buildPartial() {
        StudioAPI.VariantValue result = new StudioAPI.VariantValue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nodeId_ = nodeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dValue_ = dValue_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fValue_ = fValue_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ui64Value_ = ui64Value_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.i64Value_ = i64Value_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.uiValue_ = uiValue_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.iValue_ = iValue_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.usValue_ = usValue_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.sValue_ = sValue_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ucValue_ = ucValue_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.cValue_ = cValue_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.bValue_ = bValue_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.strValue_ = strValue_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(StudioAPI.VariantValue other) {
        if (other == StudioAPI.VariantValue.getDefaultInstance()) return this;
        if (other.hasNodeId()) {
          setNodeId(other.getNodeId());
        }
        if (other.hasDValue()) {
          setDValue(other.getDValue());
        }
        if (other.hasFValue()) {
          setFValue(other.getFValue());
        }
        if (other.hasUi64Value()) {
          setUi64Value(other.getUi64Value());
        }
        if (other.hasI64Value()) {
          setI64Value(other.getI64Value());
        }
        if (other.hasUiValue()) {
          setUiValue(other.getUiValue());
        }
        if (other.hasIValue()) {
          setIValue(other.getIValue());
        }
        if (other.hasUsValue()) {
          setUsValue(other.getUsValue());
        }
        if (other.hasSValue()) {
          setSValue(other.getSValue());
        }
        if (other.hasUcValue()) {
          setUcValue(other.getUcValue());
        }
        if (other.hasCValue()) {
          setCValue(other.getCValue());
        }
        if (other.hasBValue()) {
          setBValue(other.getBValue());
        }
        if (other.hasStrValue()) {
          bitField0_ |= 0x00001000;
          strValue_ = other.strValue_;

        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeExtensionFields(other);
        return this;
      }

      public final boolean isInitialized() {
        if (!extensionsAreInitialized()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StudioAPI.VariantValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StudioAPI.VariantValue) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 node_id = 1;
      private int nodeId_ ;
      /**
       * <code>optional uint32 node_id = 1;</code>
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 node_id = 1;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>optional uint32 node_id = 1;</code>
       */
      public Builder setNodeId(int value) {
        bitField0_ |= 0x00000001;
        nodeId_ = value;

        return this;
      }
      /**
       * <code>optional uint32 node_id = 1;</code>
       */
      public Builder clearNodeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nodeId_ = 0;

        return this;
      }

      // optional double d_value = 2;
      private double dValue_ ;
      /**
       * <code>optional double d_value = 2;</code>
       */
      public boolean hasDValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double d_value = 2;</code>
       */
      public double getDValue() {
        return dValue_;
      }
      /**
       * <code>optional double d_value = 2;</code>
       */
      public Builder setDValue(double value) {
        bitField0_ |= 0x00000002;
        dValue_ = value;

        return this;
      }
      /**
       * <code>optional double d_value = 2;</code>
       */
      public Builder clearDValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dValue_ = 0D;

        return this;
      }

      // optional float f_value = 3;
      private float fValue_ ;
      /**
       * <code>optional float f_value = 3;</code>
       */
      public boolean hasFValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float f_value = 3;</code>
       */
      public float getFValue() {
        return fValue_;
      }
      /**
       * <code>optional float f_value = 3;</code>
       */
      public Builder setFValue(float value) {
        bitField0_ |= 0x00000004;
        fValue_ = value;

        return this;
      }
      /**
       * <code>optional float f_value = 3;</code>
       */
      public Builder clearFValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fValue_ = 0F;

        return this;
      }

      // optional uint64 ui64_value = 4;
      private long ui64Value_ ;
      /**
       * <code>optional uint64 ui64_value = 4;</code>
       */
      public boolean hasUi64Value() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 ui64_value = 4;</code>
       */
      public long getUi64Value() {
        return ui64Value_;
      }
      /**
       * <code>optional uint64 ui64_value = 4;</code>
       */
      public Builder setUi64Value(long value) {
        bitField0_ |= 0x00000008;
        ui64Value_ = value;

        return this;
      }
      /**
       * <code>optional uint64 ui64_value = 4;</code>
       */
      public Builder clearUi64Value() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ui64Value_ = 0L;

        return this;
      }

      // optional sint64 i64_value = 5;
      private long i64Value_ ;
      /**
       * <code>optional sint64 i64_value = 5;</code>
       */
      public boolean hasI64Value() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint64 i64_value = 5;</code>
       */
      public long getI64Value() {
        return i64Value_;
      }
      /**
       * <code>optional sint64 i64_value = 5;</code>
       */
      public Builder setI64Value(long value) {
        bitField0_ |= 0x00000010;
        i64Value_ = value;

        return this;
      }
      /**
       * <code>optional sint64 i64_value = 5;</code>
       */
      public Builder clearI64Value() {
        bitField0_ = (bitField0_ & ~0x00000010);
        i64Value_ = 0L;

        return this;
      }

      // optional uint32 ui_value = 6;
      private int uiValue_ ;
      /**
       * <code>optional uint32 ui_value = 6;</code>
       */
      public boolean hasUiValue() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 ui_value = 6;</code>
       */
      public int getUiValue() {
        return uiValue_;
      }
      /**
       * <code>optional uint32 ui_value = 6;</code>
       */
      public Builder setUiValue(int value) {
        bitField0_ |= 0x00000020;
        uiValue_ = value;

        return this;
      }
      /**
       * <code>optional uint32 ui_value = 6;</code>
       */
      public Builder clearUiValue() {
        bitField0_ = (bitField0_ & ~0x00000020);
        uiValue_ = 0;

        return this;
      }

      // optional sint32 i_value = 7;
      private int iValue_ ;
      /**
       * <code>optional sint32 i_value = 7;</code>
       */
      public boolean hasIValue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint32 i_value = 7;</code>
       */
      public int getIValue() {
        return iValue_;
      }
      /**
       * <code>optional sint32 i_value = 7;</code>
       */
      public Builder setIValue(int value) {
        bitField0_ |= 0x00000040;
        iValue_ = value;

        return this;
      }
      /**
       * <code>optional sint32 i_value = 7;</code>
       */
      public Builder clearIValue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        iValue_ = 0;

        return this;
      }

      // optional uint32 us_value = 8;
      private int usValue_ ;
      /**
       * <code>optional uint32 us_value = 8;</code>
       *
       * <pre>
       * uint used as ushort (which protobuf doesnt have)
       * </pre>
       */
      public boolean hasUsValue() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 us_value = 8;</code>
       *
       * <pre>
       * uint used as ushort (which protobuf doesnt have)
       * </pre>
       */
      public int getUsValue() {
        return usValue_;
      }
      /**
       * <code>optional uint32 us_value = 8;</code>
       *
       * <pre>
       * uint used as ushort (which protobuf doesnt have)
       * </pre>
       */
      public Builder setUsValue(int value) {
        bitField0_ |= 0x00000080;
        usValue_ = value;

        return this;
      }
      /**
       * <code>optional uint32 us_value = 8;</code>
       *
       * <pre>
       * uint used as ushort (which protobuf doesnt have)
       * </pre>
       */
      public Builder clearUsValue() {
        bitField0_ = (bitField0_ & ~0x00000080);
        usValue_ = 0;

        return this;
      }

      // optional sint32 s_value = 9;
      private int sValue_ ;
      /**
       * <code>optional sint32 s_value = 9;</code>
       *
       * <pre>
       * int used as short
       * </pre>
       */
      public boolean hasSValue() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional sint32 s_value = 9;</code>
       *
       * <pre>
       * int used as short
       * </pre>
       */
      public int getSValue() {
        return sValue_;
      }
      /**
       * <code>optional sint32 s_value = 9;</code>
       *
       * <pre>
       * int used as short
       * </pre>
       */
      public Builder setSValue(int value) {
        bitField0_ |= 0x00000100;
        sValue_ = value;

        return this;
      }
      /**
       * <code>optional sint32 s_value = 9;</code>
       *
       * <pre>
       * int used as short
       * </pre>
       */
      public Builder clearSValue() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sValue_ = 0;

        return this;
      }

      // optional uint32 uc_value = 10;
      private int ucValue_ ;
      /**
       * <code>optional uint32 uc_value = 10;</code>
       *
       * <pre>
       * uint used as uchar
       * </pre>
       */
      public boolean hasUcValue() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 uc_value = 10;</code>
       *
       * <pre>
       * uint used as uchar
       * </pre>
       */
      public int getUcValue() {
        return ucValue_;
      }
      /**
       * <code>optional uint32 uc_value = 10;</code>
       *
       * <pre>
       * uint used as uchar
       * </pre>
       */
      public Builder setUcValue(int value) {
        bitField0_ |= 0x00000200;
        ucValue_ = value;

        return this;
      }
      /**
       * <code>optional uint32 uc_value = 10;</code>
       *
       * <pre>
       * uint used as uchar
       * </pre>
       */
      public Builder clearUcValue() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ucValue_ = 0;

        return this;
      }

      // optional sint32 c_value = 11;
      private int cValue_ ;
      /**
       * <code>optional sint32 c_value = 11;</code>
       *
       * <pre>
       * int used as char
       * </pre>
       */
      public boolean hasCValue() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional sint32 c_value = 11;</code>
       *
       * <pre>
       * int used as char
       * </pre>
       */
      public int getCValue() {
        return cValue_;
      }
      /**
       * <code>optional sint32 c_value = 11;</code>
       *
       * <pre>
       * int used as char
       * </pre>
       */
      public Builder setCValue(int value) {
        bitField0_ |= 0x00000400;
        cValue_ = value;

        return this;
      }
      /**
       * <code>optional sint32 c_value = 11;</code>
       *
       * <pre>
       * int used as char
       * </pre>
       */
      public Builder clearCValue() {
        bitField0_ = (bitField0_ & ~0x00000400);
        cValue_ = 0;

        return this;
      }

      // optional bool b_value = 12;
      private boolean bValue_ ;
      /**
       * <code>optional bool b_value = 12;</code>
       */
      public boolean hasBValue() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool b_value = 12;</code>
       */
      public boolean getBValue() {
        return bValue_;
      }
      /**
       * <code>optional bool b_value = 12;</code>
       */
      public Builder setBValue(boolean value) {
        bitField0_ |= 0x00000800;
        bValue_ = value;

        return this;
      }
      /**
       * <code>optional bool b_value = 12;</code>
       */
      public Builder clearBValue() {
        bitField0_ = (bitField0_ & ~0x00000800);
        bValue_ = false;

        return this;
      }

      // optional string str_value = 13;
      private java.lang.Object strValue_ = "";
      /**
       * <code>optional string str_value = 13;</code>
       */
      public boolean hasStrValue() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string str_value = 13;</code>
       */
      public java.lang.String getStrValue() {
        java.lang.Object ref = strValue_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          strValue_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string str_value = 13;</code>
       */
      public com.google.protobuf.ByteString
          getStrValueBytes() {
        java.lang.Object ref = strValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string str_value = 13;</code>
       */
      public Builder setStrValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        strValue_ = value;

        return this;
      }
      /**
       * <code>optional string str_value = 13;</code>
       */
      public Builder clearStrValue() {
        bitField0_ = (bitField0_ & ~0x00001000);
        strValue_ = getDefaultInstance().getStrValue();

        return this;
      }
      /**
       * <code>optional string str_value = 13;</code>
       */
      public Builder setStrValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        strValue_ = value;

        return this;
      }

      // optional uint64 timestamp = 14;
      private long timestamp_ ;
      /**
       * <code>optional uint64 timestamp = 14;</code>
       *
       * <pre>
       * Source may provide timestamp for sent value
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint64 timestamp = 14;</code>
       *
       * <pre>
       * Source may provide timestamp for sent value
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint64 timestamp = 14;</code>
       *
       * <pre>
       * Source may provide timestamp for sent value
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00002000;
        timestamp_ = value;

        return this;
      }
      /**
       * <code>optional uint64 timestamp = 14;</code>
       *
       * <pre>
       * Source may provide timestamp for sent value
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00002000);
        timestamp_ = 0L;

        return this;
      }

      // @@protoc_insertion_point(builder_scope:StudioAPI.Proto.VariantValue)
    }

    static {
      defaultInstance = new VariantValue(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:StudioAPI.Proto.VariantValue)
  }

  public interface ValueRequestOrBuilder extends
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<ValueRequest> {

    // required uint32 node_id = 1;
    /**
     * <code>required uint32 node_id = 1;</code>
     *
     * <pre>
     * List of node IDs whose value are requested
     * </pre>
     */
    boolean hasNodeId();
    /**
     * <code>required uint32 node_id = 1;</code>
     *
     * <pre>
     * List of node IDs whose value are requested
     * </pre>
     */
    int getNodeId();

    // optional double fs = 2;
    /**
     * <code>optional double fs = 2;</code>
     *
     * <pre>
     * If present indicates that values expected no more often than provided FS rate
     * </pre>
     */
    boolean hasFs();
    /**
     * <code>optional double fs = 2;</code>
     *
     * <pre>
     * If present indicates that values expected no more often than provided FS rate
     * </pre>
     */
    double getFs();

    // optional bool stop = 3;
    /**
     * <code>optional bool stop = 3;</code>
     *
     * <pre>
     * (server will accumulate and time-stamp values if they occur more often)
     * </pre>
     */
    boolean hasStop();
    /**
     * <code>optional bool stop = 3;</code>
     *
     * <pre>
     * (server will accumulate and time-stamp values if they occur more often)
     * </pre>
     */
    boolean getStop();
  }
  /**
   * Protobuf type {@code StudioAPI.Proto.ValueRequest}
   *
   * <pre>
   ** Single and periodic value request message.
   * </pre>
   */
  public static final class ValueRequest extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        ValueRequest> implements ValueRequestOrBuilder {
    // Use ValueRequest.newBuilder() to construct.
    private ValueRequest(com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<StudioAPI.ValueRequest, ?> builder) {
      super(builder);

    }
    private ValueRequest(boolean noInit) {}

    private static final ValueRequest defaultInstance;
    public static ValueRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ValueRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private ValueRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              nodeId_ = input.readUInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              fs_ = input.readDouble();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              stop_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<ValueRequest> PARSER =
        new com.google.protobuf.AbstractParser<ValueRequest>() {
      public ValueRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ValueRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ValueRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 node_id = 1;
    public static final int NODE_ID_FIELD_NUMBER = 1;
    private int nodeId_;
    /**
     * <code>required uint32 node_id = 1;</code>
     *
     * <pre>
     * List of node IDs whose value are requested
     * </pre>
     */
    public boolean hasNodeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 node_id = 1;</code>
     *
     * <pre>
     * List of node IDs whose value are requested
     * </pre>
     */
    public int getNodeId() {
      return nodeId_;
    }

    // optional double fs = 2;
    public static final int FS_FIELD_NUMBER = 2;
    private double fs_;
    /**
     * <code>optional double fs = 2;</code>
     *
     * <pre>
     * If present indicates that values expected no more often than provided FS rate
     * </pre>
     */
    public boolean hasFs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional double fs = 2;</code>
     *
     * <pre>
     * If present indicates that values expected no more often than provided FS rate
     * </pre>
     */
    public double getFs() {
      return fs_;
    }

    // optional bool stop = 3;
    public static final int STOP_FIELD_NUMBER = 3;
    private boolean stop_;
    /**
     * <code>optional bool stop = 3;</code>
     *
     * <pre>
     * (server will accumulate and time-stamp values if they occur more often)
     * </pre>
     */
    public boolean hasStop() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool stop = 3;</code>
     *
     * <pre>
     * (server will accumulate and time-stamp values if they occur more often)
     * </pre>
     */
    public boolean getStop() {
      return stop_;
    }

    private void initFields() {
      nodeId_ = 0;
      fs_ = 0D;
      stop_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasNodeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<StudioAPI.ValueRequest>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, nodeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, fs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, stop_);
      }
      extensionWriter.writeUntil(536870912, output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, nodeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, fs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, stop_);
      }
      size += extensionsSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StudioAPI.ValueRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.ValueRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.ValueRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StudioAPI.ValueRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StudioAPI.ValueRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.ValueRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StudioAPI.ValueRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StudioAPI.ValueRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StudioAPI.ValueRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StudioAPI.ValueRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StudioAPI.ValueRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code StudioAPI.Proto.ValueRequest}
     *
     * <pre>
     ** Single and periodic value request message.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          StudioAPI.ValueRequest, Builder> implements StudioAPI.ValueRequestOrBuilder {
      // Construct using StudioAPI.ValueRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        nodeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fs_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        stop_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public StudioAPI.ValueRequest getDefaultInstanceForType() {
        return StudioAPI.ValueRequest.getDefaultInstance();
      }

      public StudioAPI.ValueRequest build() {
        StudioAPI.ValueRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StudioAPI.ValueRequest buildPartial() {
        StudioAPI.ValueRequest result = new StudioAPI.ValueRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nodeId_ = nodeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fs_ = fs_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.stop_ = stop_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(StudioAPI.ValueRequest other) {
        if (other == StudioAPI.ValueRequest.getDefaultInstance()) return this;
        if (other.hasNodeId()) {
          setNodeId(other.getNodeId());
        }
        if (other.hasFs()) {
          setFs(other.getFs());
        }
        if (other.hasStop()) {
          setStop(other.getStop());
        }
        this.mergeExtensionFields(other);
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNodeId()) {

          return false;
        }
        if (!extensionsAreInitialized()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StudioAPI.ValueRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StudioAPI.ValueRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 node_id = 1;
      private int nodeId_ ;
      /**
       * <code>required uint32 node_id = 1;</code>
       *
       * <pre>
       * List of node IDs whose value are requested
       * </pre>
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 node_id = 1;</code>
       *
       * <pre>
       * List of node IDs whose value are requested
       * </pre>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>required uint32 node_id = 1;</code>
       *
       * <pre>
       * List of node IDs whose value are requested
       * </pre>
       */
      public Builder setNodeId(int value) {
        bitField0_ |= 0x00000001;
        nodeId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 node_id = 1;</code>
       *
       * <pre>
       * List of node IDs whose value are requested
       * </pre>
       */
      public Builder clearNodeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nodeId_ = 0;
        
        return this;
      }

      // optional double fs = 2;
      private double fs_ ;
      /**
       * <code>optional double fs = 2;</code>
       *
       * <pre>
       * If present indicates that values expected no more often than provided FS rate
       * </pre>
       */
      public boolean hasFs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double fs = 2;</code>
       *
       * <pre>
       * If present indicates that values expected no more often than provided FS rate
       * </pre>
       */
      public double getFs() {
        return fs_;
      }
      /**
       * <code>optional double fs = 2;</code>
       *
       * <pre>
       * If present indicates that values expected no more often than provided FS rate
       * </pre>
       */
      public Builder setFs(double value) {
        bitField0_ |= 0x00000002;
        fs_ = value;
        
        return this;
      }
      /**
       * <code>optional double fs = 2;</code>
       *
       * <pre>
       * If present indicates that values expected no more often than provided FS rate
       * </pre>
       */
      public Builder clearFs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fs_ = 0D;
        
        return this;
      }

      // optional bool stop = 3;
      private boolean stop_ ;
      /**
       * <code>optional bool stop = 3;</code>
       *
       * <pre>
       * (server will accumulate and time-stamp values if they occur more often)
       * </pre>
       */
      public boolean hasStop() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool stop = 3;</code>
       *
       * <pre>
       * (server will accumulate and time-stamp values if they occur more often)
       * </pre>
       */
      public boolean getStop() {
        return stop_;
      }
      /**
       * <code>optional bool stop = 3;</code>
       *
       * <pre>
       * (server will accumulate and time-stamp values if they occur more often)
       * </pre>
       */
      public Builder setStop(boolean value) {
        bitField0_ |= 0x00000004;
        stop_ = value;
        
        return this;
      }
      /**
       * <code>optional bool stop = 3;</code>
       *
       * <pre>
       * (server will accumulate and time-stamp values if they occur more often)
       * </pre>
       */
      public Builder clearStop() {
        bitField0_ = (bitField0_ & ~0x00000004);
        stop_ = false;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:StudioAPI.Proto.ValueRequest)
    }

    static {
      defaultInstance = new ValueRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:StudioAPI.Proto.ValueRequest)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
